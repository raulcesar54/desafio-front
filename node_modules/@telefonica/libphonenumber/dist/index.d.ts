export const Type = {
    EMERGENCY: 'emergency',
    INVALID: 'invalid',
    INTERNATIONAL: 'international',
    REGULAR: 'regular',
    SPECIAL: 'special',
    SHARED_COST: 'shared_cost',
} as const;

export const PhoneDestinationType = {
    FIXED_LINE_OR_MOBILE: 'fixed_line_or_mobile',
    FIXED_LINE: 'fixed_line',
    MOBILE: 'mobile',
    PAGER: 'pager',
    PERSONAL_NUMBER: 'personal_number',
    PREMIUM_RATE: 'premium_rate',
    SHARED_COST: 'shared_cost',
    TOLL_FREE: 'toll_free',
    UAN: 'uan',
    UNKNOWN: 'unknown',
    VOIP: 'voip',
} as const;

export type PhoneNumberTypeValue = typeof Type[keyof typeof Type];
export type PhoneDestinationTypeValue = typeof PhoneDestinationType[keyof typeof PhoneDestinationType];

export type PhoneNumber = {[key: string]: unknown} & {__opaque: true};

export function parse(number: string, code: string): PhoneNumber;
export function formatToE164(phoneNumber: PhoneNumber): string;
export function formatToPrint(phoneNumber: PhoneNumber, viewerRegionCode: string): string;
export function formatToNational(phoneNumber: PhoneNumber): string;
export function formatToInternational(phoneNumber: PhoneNumber, carrierCode: string): string;
export function formatToNationalNumberWithCarrierCode(phoneNumber: PhoneNumber, carrierCode: string): string;
export function getPhoneNumberType(number: string, regionCode: string): PhoneNumberTypeValue;
export function getRegionCodeForNumber(number: string, defaultRegionCode: string): string;
export function isMobile(phoneNumber: PhoneNumber): boolean;
export function isMobileOrFixedLine(phoneNumber: PhoneNumber): boolean;
export function isShort(phoneNumber: PhoneNumber): boolean;
export function formatAsYouType(number: string, viewerRegionCode: string): string;
export function getPhoneDestinationTypeForNumber(
    number: string,
    defaultRegionCode: string
): PhoneDestinationTypeValue;
export function isValidNumber(phoneNumber: PhoneNumber): boolean;
export function getRegionCodeForCountryCode(countryCode: string): string;
