"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    NAVBAR_HEIGHT_DESKTOP: function() {
        return m;
    },
    NAVBAR_HEIGHT_MOBILE: function() {
        return u;
    },
    dimensions: function() {
        return v;
    },
    getMisticaLinkComponent: function() {
        return h;
    },
    getTexts: function() {
        return f;
    }
});
const _jsxruntime = require("react/jsx-runtime");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const l = {
    expirationDatePlaceholder: "MM/AA",
    enablePasswordVisibility: "Mostrar contrase\xf1a",
    disablePasswordVisibility: "Ocultar contrase\xf1a",
    loading: "Cargando",
    linkOpensInNewTab: "Se abre en ventana nueva",
    linkOpensInCurrentPage: "P\xe1gina actual",
    modalClose: "Cerrar",
    dialogCancelButton: "Cancelar",
    dialogAcceptButton: "Aceptar",
    formFieldOptionalLabelSuffix: "opcional",
    formFieldErrorIsMandatory: "Este campo es obligatorio",
    formCreditCardNumberLabel: "N\xfamero de tarjeta",
    formCreditCardExpirationLabel: "Caducidad",
    formCreditCardCvvLabel: "CVV",
    formCreditCardCvvError: "CVV incorrecto",
    formCreditCardCvvTooltipVisaMcButtonOpen: "Mostrar ayuda CVV",
    formCreditCardCvvTooltipVisaMcButtonClose: "Ocultar ayuda CVV",
    formCreditCardCvvTooltipVisaMc: "El CVV son los 3 \xfaltimos d\xedgitos del reverso de tu tarjeta",
    formCreditCardCvvTooltipAmex: "Si es American Express, a\xf1ade los 4 d\xedgitos del anverso",
    formCreditCardExpirationError: "Fecha no v\xe1lida",
    formCreditCardNumberError: "No es un n\xfamero de tarjeta v\xe1lido",
    formDateOutOfRangeError: "Fecha no permitida",
    formEmailError: "Email incorrecto",
    formIbanError: "IBAN incorrecto",
    closeButtonLabel: "Cerrar",
    formSearchClear: "Borrar b\xfasqueda",
    menuLabelSuffix: "men\xfa",
    openNavigationMenu: "Abrir men\xfa de navegaci\xf3n",
    closeNavigationMenu: "Cerrar men\xfa de navegaci\xf3n",
    backNavigationBar: "Atr\xe1s",
    clearButton: "Borrar",
    carouselNextButton: "siguiente",
    carouselPrevButton: "anterior",
    playIconButtonLabel: "Reproducir",
    pauseIconButtonLabel: "Pausar",
    sheetConfirmButton: "Continuar",
    progressBarCompletedLabel: "completo",
    progressBarStepLabel: "Paso 1$s de 2$s",
    pinFieldInputLabel: "D\xedgito 1$s de 2$s",
    counterRemoveLabel: "Borrar elemento",
    counterIncreaseLabel: "Aumentar valor",
    counterDecreaseLabel: "Disminuir valor",
    counterQuantity: "cantidad",
    counterMinValue: "m\xednimo",
    counterMaxValue: "m\xe1ximo",
    timerDaysShortLabel: "d",
    timerHoursShortLabel: "h",
    timerMinutesShortLabel: "min",
    timerSecondsShortLabel: "s",
    timerAnd: "y",
    timerDayLongLabel: "d\xeda",
    timerDaysLongLabel: "d\xedas",
    timerHourLongLabel: "hora",
    timerHoursLongLabel: "horas",
    timerMinuteLongLabel: "minuto",
    timerMinutesLongLabel: "minutos",
    timerSecondLongLabel: "segundo",
    timerSecondsLongLabel: "segundos",
    timerDisplayMinutesLabel: "min",
    timerDisplaySecondsLabel: "seg",
    tableActionsHeaderLabel: "Acciones"
}, i = {
    expirationDatePlaceholder: "MM/YY",
    enablePasswordVisibility: "Show password",
    disablePasswordVisibility: "Hide password",
    loading: "Loading",
    linkOpensInNewTab: "Opens in a new window",
    linkOpensInCurrentPage: "Current page",
    modalClose: "Close",
    dialogCancelButton: "Cancel",
    dialogAcceptButton: "Accept",
    formFieldOptionalLabelSuffix: "optional",
    formFieldErrorIsMandatory: "This field is required",
    formCreditCardNumberLabel: "Card number",
    formCreditCardExpirationLabel: "Expiry",
    formCreditCardCvvLabel: "CVV",
    formCreditCardCvvError: "Incorrect CVV",
    formCreditCardCvvTooltipVisaMcButtonOpen: "Show CVV help",
    formCreditCardCvvTooltipVisaMcButtonClose: "Hide CVV help",
    formCreditCardCvvTooltipVisaMc: "The CVV is the 3 digits of the back of your card",
    formCreditCardCvvTooltipAmex: "If it's American Express, add the 4-digit number on the front of the card",
    formCreditCardExpirationError: "Invalid date",
    formCreditCardNumberError: "The card number is not valid",
    formDateOutOfRangeError: "Invalid date",
    formEmailError: "Invalid email",
    formIbanError: "Incorrect IBAN",
    closeButtonLabel: "Close",
    formSearchClear: "Clear search",
    menuLabelSuffix: "menu",
    openNavigationMenu: "Open navigation menu",
    closeNavigationMenu: "Close navigation menu",
    backNavigationBar: "Back",
    clearButton: "Clear",
    carouselNextButton: "next",
    carouselPrevButton: "previous",
    playIconButtonLabel: "Play",
    pauseIconButtonLabel: "Pause",
    sheetConfirmButton: "Continue",
    progressBarCompletedLabel: "completed",
    progressBarStepLabel: "Step 1$s of 2$s",
    pinFieldInputLabel: "Digit 1$s of 2$s",
    counterRemoveLabel: "Remove element",
    counterIncreaseLabel: "Increase value",
    counterDecreaseLabel: "Decrease value",
    counterQuantity: "quantity",
    counterMinValue: "minimum of",
    counterMaxValue: "maximum of",
    timerDaysShortLabel: "d",
    timerHoursShortLabel: "h",
    timerMinutesShortLabel: "min",
    timerSecondsShortLabel: "s",
    timerAnd: "and",
    timerDayLongLabel: "day",
    timerDaysLongLabel: "days",
    timerHourLongLabel: "hour",
    timerHoursLongLabel: "hours",
    timerMinuteLongLabel: "minute",
    timerMinutesLongLabel: "minutes",
    timerSecondLongLabel: "second",
    timerSecondsLongLabel: "seconds",
    timerDisplayMinutesLabel: "min",
    timerDisplaySecondsLabel: "sec",
    tableActionsHeaderLabel: "Actions"
}, s = {
    expirationDatePlaceholder: "MM/JJ",
    enablePasswordVisibility: "Passwort anzeigen",
    disablePasswordVisibility: "Passwort verbergen",
    loading: "Wird gespeichert",
    linkOpensInNewTab: "Wird in neuem Fenster ge\xf6ffnet",
    linkOpensInCurrentPage: "Aktuelle Seite",
    modalClose: "Schlie\xdfen",
    dialogCancelButton: "Abbrechen",
    dialogAcceptButton: "Akzeptieren",
    formFieldOptionalLabelSuffix: "optional",
    formFieldErrorIsMandatory: "Das ist ein Pflichtfeld",
    formCreditCardNumberLabel: "Kartennummer",
    formCreditCardExpirationLabel: "Ablaufdatum",
    formCreditCardCvvLabel: "CVV",
    formCreditCardCvvError: "Falsche CVV",
    formCreditCardCvvTooltipVisaMcButtonOpen: "CVV-Hilfe anzeigen",
    formCreditCardCvvTooltipVisaMcButtonClose: "CVV-Hilfe ausblenden",
    formCreditCardCvvTooltipVisaMc: "Der CVV-Code besteht aus den 3 Ziffern auf der Kartenr\xfcckseite",
    formCreditCardCvvTooltipAmex: "Bei American Express 4-stelligen Code auf der R\xfcckseite hinzuf\xfcgen",
    formCreditCardExpirationError: "Datum ung\xfcltig",
    formCreditCardNumberError: "Kartennummer ung\xfcltig",
    formDateOutOfRangeError: "Unzul\xe4ssiges Datum",
    formEmailError: "Falsche E-Mail-Adresse",
    formIbanError: "Falsche IBAN",
    closeButtonLabel: "Schlie\xdfen",
    formSearchClear: "Suche l\xf6schen",
    menuLabelSuffix: "Men\xfc",
    openNavigationMenu: "Navigationsmen\xfc \xf6ffnen",
    closeNavigationMenu: "Navigationsmen\xfc schlie\xdfen",
    backNavigationBar: "Zur\xfcck",
    clearButton: "L\xf6schen",
    carouselNextButton: "n\xe4chste",
    carouselPrevButton: "vorherige",
    playIconButtonLabel: "Abspielen",
    pauseIconButtonLabel: "Pausieren",
    sheetConfirmButton: "Fortfahren",
    progressBarCompletedLabel: "vollendet",
    progressBarStepLabel: "Schritt 1$s von 2$s",
    pinFieldInputLabel: "Ziffer 1$s von 2$s",
    counterRemoveLabel: "Element entfernen",
    counterIncreaseLabel: "Wert steigern",
    counterDecreaseLabel: "Wert verringern",
    counterQuantity: "menge",
    counterMinValue: "minimal",
    counterMaxValue: "maximal",
    timerDaysShortLabel: "Tg.",
    timerHoursShortLabel: "Std.",
    timerMinutesShortLabel: "Min.",
    timerSecondsShortLabel: "Sek.",
    timerAnd: "und",
    timerDayLongLabel: "Tag",
    timerDaysLongLabel: "Tage",
    timerHourLongLabel: "Stunde",
    timerHoursLongLabel: "Stunden",
    timerMinuteLongLabel: "Minute",
    timerMinutesLongLabel: "Minuten",
    timerSecondLongLabel: "Sekunde",
    timerSecondsLongLabel: "Sekunden",
    timerDisplayMinutesLabel: "Min.",
    timerDisplaySecondsLabel: "Sek.",
    tableActionsHeaderLabel: "Aktionen"
}, d = {
    expirationDatePlaceholder: "MM/AA",
    enablePasswordVisibility: "mostrar senha",
    disablePasswordVisibility: "esconder a senha",
    loading: "Carregando",
    linkOpensInNewTab: "Abre em nova janela",
    linkOpensInCurrentPage: "P\xe1gina atual",
    modalClose: "Fechar",
    dialogCancelButton: "Cancelar",
    dialogAcceptButton: "Aceitar",
    formFieldOptionalLabelSuffix: "opcional",
    formFieldErrorIsMandatory: "Este campo \xe9 obrigat\xf3rio",
    formCreditCardNumberLabel: "N\xfamero de cart\xe3o",
    formCreditCardExpirationLabel: "Expira\xe7\xe3o",
    formCreditCardCvvLabel: "CVV",
    formCreditCardCvvError: "CVV incorreto",
    formCreditCardCvvTooltipVisaMcButtonOpen: "Exibir ajuda CVV",
    formCreditCardCvvTooltipVisaMcButtonClose: "Ocultar ajuda CVV",
    formCreditCardCvvTooltipVisaMc: "O CVV s\xe3o os 3  d\xedgitos do reverso de seu cart\xe3o",
    formCreditCardCvvTooltipAmex: "Se for American Express, adicione os 4 d\xedgitos do anverso",
    formCreditCardExpirationError: "Data inv\xe1lida",
    formCreditCardNumberError: "N\xe3o \xe9 um n\xfamero de cart\xe3o v\xe1lido",
    formDateOutOfRangeError: "Data n\xe3o permitida",
    formEmailError: "Email incorreto",
    formIbanError: "IBAN incorreto",
    closeButtonLabel: "Fechar",
    formSearchClear: "Apagar pesquisa",
    menuLabelSuffix: "menu",
    openNavigationMenu: "Abrir menu de navega\xe7\xe3o",
    closeNavigationMenu: "Fechar menu de navega\xe7\xe3o",
    backNavigationBar: "Voltar",
    clearButton: "Apagar",
    carouselNextButton: "pr\xf3ximo",
    carouselPrevButton: "anterior",
    playIconButtonLabel: "Reproduzir",
    pauseIconButtonLabel: "Pausar",
    sheetConfirmButton: "Continuar",
    progressBarCompletedLabel: "conclu\xeddo",
    progressBarStepLabel: "Etapa 1$s de 2$s",
    pinFieldInputLabel: "D\xedgito 1$s de 2$s",
    counterRemoveLabel: "Remover elemento",
    counterIncreaseLabel: "aumentar valor",
    counterDecreaseLabel: "diminuir valor",
    counterQuantity: "quantidade",
    counterMinValue: "m\xednimo",
    counterMaxValue: "m\xe1ximo",
    timerDaysShortLabel: "d",
    timerHoursShortLabel: "h",
    timerMinutesShortLabel: "min",
    timerSecondsShortLabel: "s",
    timerAnd: "e",
    timerDayLongLabel: "dia",
    timerDaysLongLabel: "dias",
    timerHourLongLabel: "hora",
    timerHoursLongLabel: "horas",
    timerMinuteLongLabel: "minuto",
    timerMinutesLongLabel: "minutos",
    timerSecondLongLabel: "segundo",
    timerSecondsLongLabel: "segundos",
    timerDisplayMinutesLabel: "min",
    timerDisplaySecondsLabel: "seg",
    tableActionsHeaderLabel: "A\xe7\xf5es"
}, f = (e)=>{
    switch(e.toLocaleLowerCase().split(/[-_]/)[0]){
        case "es":
            return l;
        case "pt":
            return d;
        case "de":
            return s;
        case "en":
            return i;
        default:
            return process.env.NODE_ENV !== "production" && console.error(`Invalid locale: ${e}`), i;
    }
}, u = 56, m = 80, v = {
    headerMobileHeight: u,
    headerDesktopHeight: m
}, c = (_param)=>{
    var { to: e, innerRef: r } = _param, a = _object_without_properties(_param, [
        "to",
        "innerRef"
    ]);
    return /* @__PURE__ */ (0, _jsxruntime.jsx)("a", _object_spread_props(_object_spread({
        ref: r,
        href: typeof e == "string" ? e : e == null ? void 0 : e.pathname
    }, a), {
        children: a.children
    }));
}, C = (e)=>e, b = (e)=>(_param)=>{
        var { innerRef: r } = _param, a = _object_without_properties(_param, [
            "innerRef"
        ]);
        return /* @__PURE__ */ (0, _jsxruntime.jsx)(e, _object_spread({
            ref: r
        }, a));
    }, L = (e)=>(_param)=>{
        var { to: r, innerRef: a, children: t } = _param, n = _object_without_properties(_param, [
            "to",
            "innerRef",
            "children"
        ]);
        return /* @__PURE__ */ (0, _jsxruntime.jsx)(e, {
            href: r,
            children: /* @__PURE__ */ (0, _jsxruntime.jsx)("a", _object_spread_props(_object_spread({
                ref: a
            }, n), {
                children: t
            }))
        });
    }, p = (e)=>(_param)=>{
        var { to: r, innerRef: a, children: t } = _param, n = _object_without_properties(_param, [
            "to",
            "innerRef",
            "children"
        ]);
        return /* @__PURE__ */ (0, _jsxruntime.jsx)(e, _object_spread_props(_object_spread({
            href: r,
            ref: a
        }, n), {
            children: t
        }));
    }, h = (e)=>{
    if (!e) return c;
    if (typeof e == "function" || e.$$typeof) return e;
    switch(e.type){
        case "ReactRouter5":
            return C(e.Component);
        case "ReactRouter6":
            return b(e.Component);
        case "Next12":
            return L(e.Component);
        case "Next13":
        case "Next14":
            return p(e.Component);
        default:
            const r = e.type;
            throw new Error(`Invalid Link type: ${r}`);
    }
};
