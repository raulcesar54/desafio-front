"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return M;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _classnames = /*#__PURE__*/ _interop_require_default(require("classnames"));
const _badgecssmistica = require("./badge.css-mistica.js");
const _dom = require("./utils/dom.js");
const _text = require("./text.js");
const _hooks = require("./hooks.js");
const _skincontractcssmistica = require("./skins/skin-contract.css-mistica.js");
const _themevariantcontext = require("./theme-variant-context.js");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const j = (param)=>{
    let { children: e, value: r, right: s, top: o, dataAttributes: c } = param;
    const f = (0, _themevariantcontext.useIsInverseVariant)(), { textPresets: g } = (0, _hooks.useTheme)();
    if (e && r === 0) return /* @__PURE__ */ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
        children: e
    });
    if (r === 0) return null;
    const i = r && r > 9, a = f || !!e;
    return /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", _object_spread_props(_object_spread({
        className: _badgecssmistica.container
    }, (0, _dom.getPrefixedDataAttributes)(c, "Badge")), {
        children: [
            e,
            r ? /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                role: "presentation",
                "aria-hidden": "true",
                className: (0, _classnames.default)(_badgecssmistica.badgeNumber, {
                    [_badgecssmistica.badgeWithChildren]: !!e,
                    [_badgecssmistica.badgeBigNumber]: i,
                    [_badgecssmistica.badgeBorder]: a
                }),
                style: {
                    right: s,
                    top: o
                },
                children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text1, {
                    forceMobileSizes: !0,
                    weight: g.indicator.weight,
                    color: _skincontractcssmistica.vars.colors.textPrimaryInverse,
                    children: i ? "+9" : r
                })
            }) : /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                style: {
                    right: s,
                    top: o
                },
                className: (0, _classnames.default)(_badgecssmistica.badge, {
                    [_badgecssmistica.badgeWithChildren]: !!e,
                    [_badgecssmistica.badgeBorder]: a
                })
            })
        ]
    }));
}, M = j;
