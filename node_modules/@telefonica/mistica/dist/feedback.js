"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ErrorFeedbackScreen: function() {
        return We;
    },
    FeedbackScreen: function() {
        return F;
    },
    InfoFeedbackScreen: function() {
        return _e;
    },
    SuccessFeedback: function() {
        return qe;
    },
    SuccessFeedbackScreen: function() {
        return Re;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _hooks = require("./hooks.js");
const _buttonfixedfooterlayout = /*#__PURE__*/ _interop_require_default(require("./button-fixed-footer-layout.js"));
const _constants = require("./skins/constants.js");
const _overscrollcolorcontext = require("./overscroll-color-context.js");
const _iconsuccess = /*#__PURE__*/ _interop_require_default(require("./icons/icon-success.js"));
const _iconsuccessvivo = /*#__PURE__*/ _interop_require_default(require("./icons/icon-success-vivo.js"));
const _iconerror = /*#__PURE__*/ _interop_require_default(require("./icons/icon-error.js"));
const _iconinfo = /*#__PURE__*/ _interop_require_default(require("./icons/icon-info.js"));
const _webviewbridge = require("@tef-novum/webview-bridge");
const _platform = require("./utils/platform.js");
const _text = require("./text.js");
const _box = /*#__PURE__*/ _interop_require_default(require("./box.js"));
const _boxed = require("./boxed.js");
const _responsivelayout = /*#__PURE__*/ _interop_require_default(require("./responsive-layout.js"));
const _stack = /*#__PURE__*/ _interop_require_default(require("./stack.js"));
const _classnames = /*#__PURE__*/ _interop_require_default(require("classnames"));
const _buttongroup = /*#__PURE__*/ _interop_require_default(require("./button-group.js"));
const _skincontractcssmistica = require("./skins/skin-contract.css-mistica.js");
const _feedbackcssmistica = require("./feedback.css-mistica.js");
const _iconsuccessvivonew = /*#__PURE__*/ _interop_require_default(require("./icons/icon-success-vivo-new.js"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const O = (o)=>!(0, _platform.isRunningAcceptanceTest)(o), D = (param)=>{
    let { primaryButton: o, secondaryButton: r } = param;
    return !!o || !!r;
}, T = (o)=>{
    (0, _webviewbridge.isWebViewBridgeAvailable)() && (0, _webviewbridge.requestVibration)(o).catch(()=>{});
}, E = (o)=>{
    _react.useEffect(()=>{
        let r;
        return o === "success" && (r = setTimeout(()=>T("success"), 700)), o === "error" && (r = setTimeout(()=>T("error"), 1e3)), ()=>{
            clearTimeout(r);
        };
    }, [
        o
    ]);
}, R = (param, n)=>{
    let { icon: o, title: r, description: t, extra: c } = param;
    const i = t && Array.isArray(t) ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_stack.default, {
        space: 16,
        children: t.map((a, m)=>/* @__PURE__ */ (0, _jsxruntime.jsx)("p", {
                children: a
            }, m))
    }) : t;
    return /* @__PURE__ */ (0, _jsxruntime.jsxs)(_stack.default, {
        space: 24,
        children: [
            /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                className: _feedbackcssmistica.iconContainer,
                children: o
            }),
            /* @__PURE__ */ (0, _jsxruntime.jsxs)(_stack.default, {
                space: 16,
                className: (0, _classnames.default)(_feedbackcssmistica.feedbackData),
                children: [
                    /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                        className: (0, _classnames.default)(n && _feedbackcssmistica.feedbackTextAppearFast),
                        children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text6, {
                            as: "h1",
                            children: r
                        })
                    }),
                    i && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                        className: (0, _classnames.default)(n && _feedbackcssmistica.feedbackTextAppearMedium),
                        children: i && /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text3, {
                            regular: !0,
                            color: _skincontractcssmistica.vars.colors.textSecondary,
                            children: i
                        })
                    }),
                    c && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                        className: (0, _classnames.default)(n && (i ? _feedbackcssmistica.feedbackTextAppearSlow : _feedbackcssmistica.feedbackTextAppearMedium)),
                        children: c
                    })
                ]
            })
        ]
    });
}, W = (o, r)=>{
    const t = D(r);
    return /* @__PURE__ */ (0, _jsxruntime.jsxs)(_stack.default, {
        space: {
            desktop: 40,
            mobile: 24
        },
        children: [
            o,
            t && /* @__PURE__ */ (0, _jsxruntime.jsx)(_buttongroup.default, _object_spread({}, r))
        ]
    });
}, _ = (param)=>{
    let { isInverse: o, body: r, imageFit: t, imageUrl: c, dataAttributes: n } = param;
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(_boxed.InternalBoxed, {
        borderRadius: _skincontractcssmistica.vars.borderRadii.legacyDisplay,
        desktopOnly: !0,
        isInverse: o,
        dataAttributes: n,
        children: /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
            className: _feedbackcssmistica.desktopContainer,
            children: [
                /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                    className: _feedbackcssmistica.desktopContent,
                    children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                        padding: {
                            desktop: 64,
                            mobile: 0
                        },
                        paddingTop: 0,
                        children: r
                    })
                }),
                c && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                    className: _feedbackcssmistica.desktopImage,
                    style: {
                        backgroundImage: `url(${c})`,
                        backgroundPosition: t === "fit" ? "bottom right" : "center right",
                        backgroundRepeat: "no-repeat",
                        backgroundSize: t === "fit" ? "contain" : "cover",
                        flex: 1,
                        maxWidth: 600
                    }
                })
            ]
        })
    });
}, pe = ()=>((0, _overscrollcolorcontext.useSetOverscrollColor)({
        topColor: _skincontractcssmistica.vars.colors.backgroundBrandTop,
        bottomColor: "transparent"
    }), null), F = (param)=>{
    let { title: o, description: r, children: t, extra: c, primaryButton: n, secondaryButton: i, link: a, hapticFeedback: m, icon: f, animateText: k = !1, isInverse: s = !1, unstable_inlineInDesktop: h, imageUrl: x, imageFit: g, dataAttributes: S } = param;
    E(m);
    const { platformOverrides: q, isDarkMode: w } = (0, _hooks.useTheme)(), { isTabletOrSmaller: j } = (0, _hooks.useScreenSize)(), H = D({
        primaryButton: n,
        secondaryButton: i,
        link: a
    }), I = R({
        icon: f,
        title: o,
        description: r,
        extra: c !== null && c !== void 0 ? c : t
    }, k && O(q));
    return !j && h ? W(I, {
        primaryButton: n,
        secondaryButton: i,
        link: a
    }) : /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
        style: {
            position: "relative"
        },
        children: /* @__PURE__ */ (0, _jsxruntime.jsxs)(_responsivelayout.default, {
            children: [
                s && /* @__PURE__ */ (0, _jsxruntime.jsx)(pe, {}),
                /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                    paddingTop: {
                        desktop: 64,
                        mobile: 0
                    },
                    children: _({
                        isInverse: s,
                        body: /* @__PURE__ */ (0, _jsxruntime.jsx)(_buttonfixedfooterlayout.default, {
                            isFooterVisible: H,
                            button: n,
                            secondaryButton: i,
                            link: a,
                            footerBgColor: s && !w ? _skincontractcssmistica.vars.colors.backgroundBrandBottom : void 0,
                            containerBgColor: s ? _skincontractcssmistica.vars.colors.backgroundBrand : _skincontractcssmistica.vars.colors.background,
                            children: /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                className: _feedbackcssmistica.container,
                                children: /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                    className: (0, _classnames.default)(_feedbackcssmistica.innerContainer, {
                                        [_feedbackcssmistica.innerContainerWithButtons]: n || i || a
                                    }),
                                    children: I
                                })
                            })
                        }),
                        imageFit: g,
                        imageUrl: x,
                        dataAttributes: S
                    })
                })
            ]
        })
    });
}, Re = (_param)=>{
    var { dataAttributes: o } = _param, r = _object_without_properties(_param, [
        "dataAttributes"
    ]);
    const { isTabletOrSmaller: t } = (0, _hooks.useScreenSize)(), { skinName: c } = (0, _hooks.useTheme)();
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(F, _object_spread_props(_object_spread({}, r), {
        isInverse: !r.unstable_inlineInDesktop || t,
        hapticFeedback: "success",
        icon: c === _constants.VIVO_SKIN ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_iconsuccessvivo.default, {
            size: "100%"
        }) : c === _constants.VIVO_NEW_SKIN ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_iconsuccessvivonew.default, {
            size: "100%"
        }) : /* @__PURE__ */ (0, _jsxruntime.jsx)(_iconsuccess.default, {
            size: "100%"
        }),
        animateText: !0,
        imageUrl: r.imageUrl,
        imageFit: r.imageFit,
        dataAttributes: _object_spread({
            "component-name": "SuccessFeedbackScreen"
        }, o)
    }));
}, We = (_param)=>{
    var { children: o, errorReference: r, dataAttributes: t } = _param, c = _object_without_properties(_param, [
        "children",
        "errorReference",
        "dataAttributes"
    ]);
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(F, _object_spread_props(_object_spread({}, c), {
        hapticFeedback: "error",
        icon: /* @__PURE__ */ (0, _jsxruntime.jsx)(_iconerror.default, {
            size: "100%"
        }),
        animateText: !0,
        dataAttributes: _object_spread({
            "component-name": "ErrorFeedbackScreen"
        }, t),
        extra: /* @__PURE__ */ (0, _jsxruntime.jsxs)(_stack.default, {
            space: 16,
            children: [
                o,
                r && /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                    color: _skincontractcssmistica.vars.colors.textSecondary,
                    regular: !0,
                    children: r
                })
            ]
        })
    }));
}, _e = (_param)=>{
    var { dataAttributes: o, Icon: r = _iconinfo.default } = _param, t = _object_without_properties(_param, [
        "dataAttributes",
        "Icon"
    ]);
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(F, _object_spread({
        dataAttributes: _object_spread({
            "component-name": "InfoFeedbackScreen"
        }, o),
        icon: /* @__PURE__ */ (0, _jsxruntime.jsx)(r, {
            size: "100%"
        })
    }, t));
}, qe = (param)=>{
    let { title: o, description: r, children: t, extra: c, primaryButton: n, secondaryButton: i, link: a, imageUrl: m, imageFit: f, dataAttributes: k } = param;
    E("success");
    const { skinName: s, platformOverrides: h } = (0, _hooks.useTheme)(), g = R({
        icon: s === _constants.VIVO_SKIN ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_iconsuccessvivo.default, {
            size: "100%"
        }) : s === _constants.VIVO_NEW_SKIN ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_iconsuccessvivonew.default, {
            size: "100%"
        }) : /* @__PURE__ */ (0, _jsxruntime.jsx)(_iconsuccess.default, {
            size: "100%"
        }),
        title: o,
        description: r,
        extra: c !== null && c !== void 0 ? c : t
    }, O(h)), S = W(g, {
        primaryButton: n,
        secondaryButton: i,
        link: a
    });
    return _({
        isInverse: !0,
        body: /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
            className: _feedbackcssmistica.backgroundBrand,
            children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                paddingX: {
                    mobile: 16,
                    tablet: 24,
                    desktop: 0
                },
                children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                    paddingBottom: {
                        desktop: 0,
                        mobile: 48
                    },
                    paddingTop: 64,
                    children: S
                })
            })
        }),
        imageFit: f,
        imageUrl: m,
        dataAttributes: _object_spread({
            "component-name": "SuccessFeedback"
        }, k)
    });
};
