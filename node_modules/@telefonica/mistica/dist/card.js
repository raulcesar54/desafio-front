"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    CardActionIconButton: function() {
        return ca;
    },
    CardActionSpinner: function() {
        return pa;
    },
    CardActionsGroup: function() {
        return Q;
    },
    DataCard: function() {
        return qa;
    },
    DisplayDataCard: function() {
        return Qa;
    },
    DisplayMediaCard: function() {
        return Ka;
    },
    MediaCard: function() {
        return Wa;
    },
    NakedCard: function() {
        return _a;
    },
    PosterCard: function() {
        return Ua;
    },
    SmallNakedCard: function() {
        return $a;
    },
    SnapCard: function() {
        return Ja;
    },
    useVideoWithControls: function() {
        return Ve;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _tag = /*#__PURE__*/ _interop_require_default(require("./tag.js"));
const _stack = /*#__PURE__*/ _interop_require_default(require("./stack.js"));
const _box = /*#__PURE__*/ _interop_require_default(require("./box.js"));
const _text = require("./text.js");
const _boxed = require("./boxed.js");
const _buttongroup = /*#__PURE__*/ _interop_require_default(require("./button-group.js"));
const _image = /*#__PURE__*/ _interop_require_default(require("./image.js"));
const _touchable = require("./touchable.js");
const _skincontractcssmistica = require("./skins/skin-contract.css-mistica.js");
const _cardcssmistica = require("./card.css-mistica.js");
const _imagecssmistica = require("./image.css-mistica.js");
const _hooks = require("./hooks.js");
const _sprinklescssmistica = require("./sprinkles.css-mistica.js");
const _iconbutton = require("./icon-button.js");
const _iconcloseregular = /*#__PURE__*/ _interop_require_default(require("./generated/mistica-icons/icon-close-regular.js"));
const _iconpausefilled = /*#__PURE__*/ _interop_require_default(require("./generated/mistica-icons/icon-pause-filled.js"));
const _iconplayfilled = /*#__PURE__*/ _interop_require_default(require("./generated/mistica-icons/icon-play-filled.js"));
const _common = require("./utils/common.js");
const _spinner = /*#__PURE__*/ _interop_require_default(require("./spinner.js"));
const _video = /*#__PURE__*/ _interop_require_default(require("./video.js"));
const _themevariantcontext = require("./theme-variant-context.js");
const _classnames = /*#__PURE__*/ _interop_require_default(require("classnames"));
const _inline = /*#__PURE__*/ _interop_require_default(require("./inline.js"));
const _dom = require("./utils/dom.js");
const _platform = require("./utils/platform.js");
const _css = require("./utils/css.js");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const S = ()=>{
    const [a, r] = _react.useState(""), t = _react.useCallback((n)=>{
        n && r((process.env.NODE_ENV === "test" ? n.textContent : n.innerText) || "");
    }, []);
    return {
        text: a,
        ref: t
    };
}, ze = (a, r)=>{
    const { texts: t } = (0, _hooks.useTheme)(), n = a ? [
        ...a
    ] : [];
    return r && n.push({
        label: t.closeButtonLabel,
        onPress: r,
        Icon: _iconcloseregular.default
    }), n;
}, je = /*#__PURE__*/ _react.createContext("default"), ca = (a)=>{
    const r = _react.useContext(je);
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(_themevariantcontext.ThemeVariant, {
        isInverse: r === "inverse",
        children: a.Icon ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_iconbutton.InternalIconButton, _object_spread_props(_object_spread({}, a), {
            "aria-label": a.label,
            small: !0,
            isOverMedia: r === "media",
            type: "neutral",
            backgroundType: "transparent"
        })) : /* @__PURE__ */ (0, _jsxruntime.jsx)(_iconbutton.InternalToggleIconButton, _object_spread_props(_object_spread({}, a), {
            checkedProps: _object_spread_props(_object_spread({}, a.checkedProps), {
                "aria-label": a.checkedProps.label,
                type: r === "media" ? "neutral" : "brand",
                backgroundType: "solid"
            }),
            uncheckedProps: _object_spread_props(_object_spread({}, a.uncheckedProps), {
                "aria-label": a.uncheckedProps.label,
                type: "neutral",
                backgroundType: "transparent"
            }),
            small: !0,
            isOverMedia: r === "media"
        }))
    });
}, Q = (param)=>{
    let { actions: a, padding: r = 16, onClose: t, type: n = "default" } = param;
    const i = ze(a, t);
    return i.length > 0 ? /* @__PURE__ */ (0, _jsxruntime.jsx)(je.Provider, {
        value: n,
        children: /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
            style: {
                position: "absolute",
                right: r,
                top: r,
                zIndex: 3
            },
            children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_inline.default, {
                space: 16,
                children: i.map((o, s)=>"Icon" in o || "checkedProps" in o ? /* @__PURE__ */ (0, _jsxruntime.jsx)(ca, _object_spread({}, o), s) : o)
            })
        })
    }) : /* @__PURE__ */ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {});
}, ma = (a)=>a ? typeof a == "number" ? a : ({
        "1:1": 1,
        "16:9": 16 / 9,
        "7:10": 7 / 10,
        "9:10": 9 / 10,
        auto: 0
    })[a] : 0, q = /*#__PURE__*/ _react.forwardRef((param, s)=>{
    let { children: a, width: r, height: t, aspectRatio: n, dataAttributes: i, className: d, "aria-label": o } = param;
    const v = r && t ? void 0 : ma(n);
    return /* @__PURE__ */ (0, _jsxruntime.jsx)("section", _object_spread_props(_object_spread({}, (0, _dom.getPrefixedDataAttributes)(i)), {
        ref: s,
        "aria-label": o,
        className: (0, _classnames.default)(d, _cardcssmistica.cardContainer),
        style: _object_spread({
            width: r || "100%",
            height: t || "100%"
        }, v ? (0, _css.applyCssVars)({
            [_cardcssmistica.vars.aspectRatio]: String(v)
        }) : {}),
        children: a
    }));
}), Pe = (a)=>/* @__PURE__ */ (0, _jsxruntime.jsx)(_image.default, {
        width: "100%",
        height: "100%",
        src: a || ""
    }), ha = {
    loading: {
        showSpinner: "loadingTimeout",
        play: "playing",
        pause: "paused",
        fail: "error"
    },
    loadingTimeout: {
        play: "playing",
        pause: "paused",
        fail: "error",
        reset: "loading"
    },
    playing: {
        pause: "paused",
        reset: "loading",
        fail: "error"
    },
    paused: {
        play: "playing",
        reset: "loading",
        fail: "error"
    },
    error: {
        reset: "loading"
    }
}, ua = (a, r)=>ha[a][r] || a, pa = (param)=>{
    let { color: a } = param;
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(_spinner.default, {
        color: a,
        size: 16,
        delay: "0"
    });
}, fa = (param)=>{
    let { color: a } = param;
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(_iconpausefilled.default, {
        color: a,
        size: 12
    });
}, va = (param)=>{
    let { color: a } = param;
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(_iconplayfilled.default, {
        color: a,
        size: 12
    });
}, Ve = (a, r, t)=>{
    const { texts: n } = (0, _hooks.useTheme)(), i = _react.useRef(null), [d, o] = _react.useReducer(ua, "loading");
    _react.useEffect(()=>{
        var h;
        const c = setTimeout(()=>o("showSpinner"), 2e3);
        return (h = i.current) == null || h.load(), ()=>{
            clearTimeout(c), o("reset");
        };
    }, [
        a
    ]);
    const s = _react.useMemo(()=>a !== void 0 ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_video.default, {
            ref: (0, _common.combineRefs)(i, t),
            src: a,
            width: "100%",
            height: "100%",
            poster: r,
            onError: ()=>o("fail"),
            onPause: ()=>o("pause"),
            onPlay: ()=>o("play")
        }) : void 0, [
        t,
        a,
        r
    ]), v = ()=>{
        const c = i.current;
        c && (d === "loading" ? o("showSpinner") : d === "paused" ? c.play() : d === "playing" && c.pause());
    };
    if (d === "error") return {
        video: s
    };
    const m = s ? {
        uncheckedProps: {
            Icon: d === "loadingTimeout" && !(0, _platform.isRunningAcceptanceTest)() ? pa : fa,
            label: d === "loadingTimeout" ? "" : n.pauseIconButtonLabel
        },
        checkedProps: {
            Icon: va,
            label: n.playIconButtonLabel
        },
        onChange: v,
        disabled: d === "loadingTimeout",
        checked: d === "paused"
    } : void 0;
    return {
        video: s,
        videoAction: m
    };
}, ge = (param)=>{
    let { headline: a, headlineRef: r, pretitle: t, pretitleLinesMax: n, title: i, titleAs: d = "h3", titleLinesMax: o, subtitle: s, subtitleLinesMax: v, description: m, descriptionLinesMax: c, extra: h, extraRef: y, button: p, buttonLink: g } = param;
    const { textPresets: N } = (0, _hooks.useTheme)();
    return /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
        className: (0, _sprinklescssmistica.sprinkles)({
            display: "flex",
            flex: 1,
            justifyContent: "space-between",
            flexDirection: "column"
        }),
        children: [
            /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
                className: _cardcssmistica.flexColumn,
                children: [
                    i && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                        style: {
                            paddingBottom: s || m ? 4 : 0
                        },
                        children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text, _object_spread_props(_object_spread({}, _text.textProps.text4), {
                            truncate: o,
                            weight: N.cardTitle.weight,
                            as: d,
                            hyphens: "auto",
                            children: i
                        }))
                    }),
                    a && // assuming that the headline will always be followed by one of: pretitle, title, subtitle, description
                    /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                        ref: r,
                        style: {
                            order: -2,
                            paddingBottom: 8
                        },
                        children: typeof a == "string" ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_tag.default, {
                            type: "promo",
                            children: a
                        }) : a
                    }),
                    t && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                        style: {
                            order: -1,
                            paddingBottom: 4
                        },
                        children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                            truncate: n,
                            as: "div",
                            regular: !0,
                            hyphens: "auto",
                            children: t
                        })
                    }),
                    s && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                        style: {
                            paddingBottom: m ? 4 : 0
                        },
                        children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                            truncate: v,
                            as: "div",
                            regular: !0,
                            hyphens: "auto",
                            children: s
                        })
                    }),
                    m && // this is tricky, when headline exists, the 8px padding is added by it.
                    // Otherwise, only 4px are added by title|pretitle|subtitle, so we need to add 4px more
                    /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                        style: {
                            paddingTop: t || i || s ? 4 : 0
                        },
                        children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                            truncate: c,
                            as: "p",
                            regular: !0,
                            color: _skincontractcssmistica.vars.colors.textSecondary,
                            hyphens: "auto",
                            children: m
                        })
                    }),
                    h && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                        ref: y,
                        children: h
                    })
                ]
            }),
            (p || g) && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                className: _cardcssmistica.actions,
                children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_buttongroup.default, {
                    primaryButton: p,
                    link: g
                })
            })
        ]
    });
}, Wa = /*#__PURE__*/ _react.forwardRef((_param, A)=>{
    var { media: a, icon: r, headline: t, pretitle: n, pretitleLinesMax: i, subtitle: d, subtitleLinesMax: o, title: s, titleAs: v = "h3", titleLinesMax: m, description: c, descriptionLinesMax: h, extra: y, actions: p, button: g, buttonLink: N, dataAttributes: x, "aria-label": C, onClose: T } = _param, f = _object_without_properties(_param, [
        "media",
        "icon",
        "headline",
        "pretitle",
        "pretitleLinesMax",
        "subtitle",
        "subtitleLinesMax",
        "title",
        "titleAs",
        "titleLinesMax",
        "description",
        "descriptionLinesMax",
        "extra",
        "actions",
        "button",
        "buttonLink",
        "dataAttributes",
        "aria-label",
        "onClose"
    ]);
    const B = !!(f.href || f.to || f.onPress), { text: M, ref: V } = S(), { text: O, ref: I } = S(), z = C || [
        s,
        M,
        n,
        d,
        c,
        O
    ].filter(Boolean).join(" ");
    return /* @__PURE__ */ (0, _jsxruntime.jsxs)(q, {
        dataAttributes: _object_spread({
            "component-name": "MediaCard"
        }, x),
        ref: A,
        "aria-label": B ? void 0 : C,
        className: _cardcssmistica.touchableContainer,
        children: [
            /* @__PURE__ */ (0, _jsxruntime.jsx)(_boxed.Boxed, {
                className: _cardcssmistica.boxed,
                width: "100%",
                height: "100%",
                children: /* @__PURE__ */ (0, _jsxruntime.jsxs)(_touchable.BaseTouchable, _object_spread_props(_object_spread({
                    maybe: !0
                }, f), {
                    className: _cardcssmistica.touchable,
                    "aria-label": B ? z : void 0,
                    children: [
                        B && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                            className: _cardcssmistica.touchableMediaCardOverlay
                        }),
                        /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
                            className: _cardcssmistica.mediaCard,
                            children: [
                                /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                    style: (0, _css.applyCssVars)({
                                        [_imagecssmistica.vars.mediaBorderRadius]: "0px"
                                    }),
                                    children: a
                                }),
                                /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                    className: _cardcssmistica.mediaCardContent,
                                    children: /* @__PURE__ */ (0, _jsxruntime.jsx)(ge, {
                                        headline: t,
                                        headlineRef: V,
                                        pretitle: n,
                                        pretitleLinesMax: i,
                                        title: s,
                                        titleAs: v,
                                        titleLinesMax: m,
                                        subtitle: d,
                                        subtitleLinesMax: o,
                                        description: c,
                                        descriptionLinesMax: h,
                                        extra: y,
                                        extraRef: I,
                                        button: g,
                                        buttonLink: N
                                    })
                                }),
                                r && /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                                    className: _cardcssmistica.mediaCardIcon,
                                    paddingLeft: {
                                        mobile: 16,
                                        desktop: 24
                                    },
                                    paddingTop: {
                                        mobile: 16,
                                        desktop: 24
                                    },
                                    children: /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                        style: (0, _css.applyCssVars)({
                                            [_imagecssmistica.vars.mediaBorderRadius]: _skincontractcssmistica.vars.borderRadii.mediaSmall
                                        }),
                                        children: r
                                    })
                                })
                            ]
                        })
                    ]
                }))
            }),
            /* @__PURE__ */ (0, _jsxruntime.jsx)(Q, {
                onClose: T,
                actions: p,
                type: "media"
            })
        ]
    });
}), _a = /*#__PURE__*/ _react.forwardRef((_param, A)=>{
    var { media: a, icon: r, headline: t, pretitle: n, pretitleLinesMax: i, subtitle: d, subtitleLinesMax: o, title: s, titleAs: v = "h3", titleLinesMax: m, description: c, descriptionLinesMax: h, extra: y, actions: p, button: g, buttonLink: N, dataAttributes: x, "aria-label": C, onClose: T } = _param, f = _object_without_properties(_param, [
        "media",
        "icon",
        "headline",
        "pretitle",
        "pretitleLinesMax",
        "subtitle",
        "subtitleLinesMax",
        "title",
        "titleAs",
        "titleLinesMax",
        "description",
        "descriptionLinesMax",
        "extra",
        "actions",
        "button",
        "buttonLink",
        "dataAttributes",
        "aria-label",
        "onClose"
    ]);
    const B = !!(f.href || f.to || f.onPress), M = a && a.type === _image.default && a.props.circular, { text: V, ref: O } = S(), { text: I, ref: z } = S(), R = C || [
        s,
        V,
        n,
        d,
        c,
        I
    ].filter(Boolean).join(" ");
    return /* @__PURE__ */ (0, _jsxruntime.jsxs)(q, {
        ref: A,
        dataAttributes: _object_spread({
            "component-name": "NakedCard"
        }, x),
        "aria-label": B ? void 0 : C,
        className: B ? _cardcssmistica.touchableContainer : void 0,
        children: [
            /* @__PURE__ */ (0, _jsxruntime.jsx)(_touchable.BaseTouchable, _object_spread_props(_object_spread({
                maybe: !0
            }, f), {
                className: _cardcssmistica.touchable,
                "aria-label": B ? R : void 0,
                children: /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
                    className: _cardcssmistica.mediaCard,
                    children: [
                        /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
                            style: {
                                position: "relative"
                            },
                            children: [
                                B && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                    className: (0, _classnames.default)(_cardcssmistica.touchableNakedMediaOverlay, {
                                        [_cardcssmistica.circularMediaOverlay]: M
                                    })
                                }),
                                a
                            ]
                        }),
                        /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                            className: _cardcssmistica.nakedCardContent,
                            children: /* @__PURE__ */ (0, _jsxruntime.jsx)(ge, {
                                headline: t,
                                headlineRef: O,
                                pretitle: n,
                                pretitleLinesMax: i,
                                title: s,
                                titleAs: v,
                                titleLinesMax: m,
                                subtitle: d,
                                subtitleLinesMax: o,
                                description: c,
                                descriptionLinesMax: h,
                                extra: y,
                                extraRef: z,
                                button: g,
                                buttonLink: N
                            })
                        }),
                        r && /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                            className: _cardcssmistica.mediaCardIcon,
                            paddingLeft: {
                                mobile: 16,
                                desktop: 24
                            },
                            paddingTop: {
                                mobile: 16,
                                desktop: 24
                            },
                            children: /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                style: (0, _css.applyCssVars)({
                                    [_imagecssmistica.vars.mediaBorderRadius]: _skincontractcssmistica.vars.borderRadii.mediaSmall
                                }),
                                children: r
                            })
                        })
                    ]
                })
            })),
            /* @__PURE__ */ (0, _jsxruntime.jsx)(Q, {
                onClose: T,
                actions: p,
                type: "media"
            })
        ]
    });
}), $a = /*#__PURE__*/ _react.forwardRef((_param, y)=>{
    var { media: a, title: r, titleAs: t = "h3", titleLinesMax: n, subtitle: i, subtitleLinesMax: d, description: o, descriptionLinesMax: s, extra: v, dataAttributes: m, "aria-label": c } = _param, h = _object_without_properties(_param, [
        "media",
        "title",
        "titleAs",
        "titleLinesMax",
        "subtitle",
        "subtitleLinesMax",
        "description",
        "descriptionLinesMax",
        "extra",
        "dataAttributes",
        "aria-label"
    ]);
    const p = !!(h.href || h.to || h.onPress), g = a && a.type === _image.default && a.props.circular, { textPresets: N } = (0, _hooks.useTheme)(), { text: x, ref: C } = S(), T = c || [
        r,
        i,
        o,
        x
    ].filter(Boolean).join(" ");
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(q, {
        ref: y,
        dataAttributes: _object_spread({
            "component-name": "SmallNakedCard"
        }, m),
        "aria-label": p ? void 0 : c,
        className: p ? _cardcssmistica.touchableContainer : void 0,
        children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_touchable.BaseTouchable, _object_spread_props(_object_spread({
            maybe: !0
        }, h), {
            className: _cardcssmistica.touchable,
            "aria-label": p ? T : void 0,
            children: /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
                className: _cardcssmistica.mediaCard,
                children: [
                    /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
                        style: {
                            position: "relative"
                        },
                        children: [
                            p && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                className: (0, _classnames.default)(_cardcssmistica.touchableNakedMediaOverlay, {
                                    [_cardcssmistica.circularMediaOverlay]: g
                                })
                            }),
                            a
                        ]
                    }),
                    /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
                        className: _cardcssmistica.nakedCardContent,
                        children: [
                            /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                children: /* @__PURE__ */ (0, _jsxruntime.jsxs)(_stack.default, {
                                    space: 4,
                                    children: [
                                        r && /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text, _object_spread_props(_object_spread({}, _text.textProps.text2), {
                                            truncate: n,
                                            weight: N.cardTitle.weight,
                                            as: t,
                                            hyphens: "auto",
                                            children: r
                                        })),
                                        i && /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                                            truncate: d,
                                            regular: !0,
                                            as: "p",
                                            hyphens: "auto",
                                            children: i
                                        }),
                                        o && /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                                            truncate: s,
                                            regular: !0,
                                            as: "p",
                                            color: _skincontractcssmistica.vars.colors.textSecondary,
                                            hyphens: "auto",
                                            children: o
                                        })
                                    ]
                                })
                            }),
                            v && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                ref: C,
                                children: v
                            })
                        ]
                    })
                ]
            })
        }))
    });
}), qa = /*#__PURE__*/ _react.forwardRef((_param, A)=>{
    var { icon: a, headline: r, pretitle: t, pretitleLinesMax: n, title: i, titleAs: d = "h3", titleLinesMax: o, subtitle: s, subtitleLinesMax: v, description: m, descriptionLinesMax: c, extra: h, actions: y, button: p, buttonLink: g, dataAttributes: N, "aria-label": x, onClose: C, aspectRatio: T } = _param, f = _object_without_properties(_param, [
        "icon",
        "headline",
        "pretitle",
        "pretitleLinesMax",
        "title",
        "titleAs",
        "titleLinesMax",
        "subtitle",
        "subtitleLinesMax",
        "description",
        "descriptionLinesMax",
        "extra",
        "actions",
        "button",
        "buttonLink",
        "dataAttributes",
        "aria-label",
        "onClose",
        "aspectRatio"
    ]);
    const B = !!a || !!r, M = !!(f.href || f.to || f.onPress), { text: V, ref: O } = S(), { text: I, ref: z } = S(), R = ze(y, C), k = x || [
        i,
        V,
        t,
        m,
        I
    ].filter(Boolean).join(" ");
    return /* @__PURE__ */ (0, _jsxruntime.jsxs)(q, {
        dataAttributes: _object_spread({
            "component-name": "DataCard"
        }, N),
        ref: A,
        "aria-label": M ? void 0 : x,
        className: _cardcssmistica.touchableContainer,
        aspectRatio: T,
        children: [
            /* @__PURE__ */ (0, _jsxruntime.jsx)(_boxed.Boxed, {
                className: _cardcssmistica.boxed,
                width: "100%",
                minHeight: "100%",
                children: /* @__PURE__ */ (0, _jsxruntime.jsxs)(_touchable.BaseTouchable, _object_spread_props(_object_spread({
                    maybe: !0
                }, f), {
                    className: _cardcssmistica.touchable,
                    "aria-label": M ? k : void 0,
                    children: [
                        M && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                            className: _cardcssmistica.touchableCardOverlay
                        }),
                        /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
                            className: _cardcssmistica.dataCard,
                            children: [
                                /* @__PURE__ */ (0, _jsxruntime.jsxs)(_inline.default, {
                                    space: 0,
                                    children: [
                                        /* @__PURE__ */ (0, _jsxruntime.jsxs)(_stack.default, {
                                            space: 16,
                                            children: [
                                                a && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                                    style: (0, _css.applyCssVars)({
                                                        [_imagecssmistica.vars.mediaBorderRadius]: _skincontractcssmistica.vars.borderRadii.mediaSmall
                                                    }),
                                                    children: a
                                                }),
                                                /* @__PURE__ */ (0, _jsxruntime.jsx)(ge, {
                                                    headline: r,
                                                    headlineRef: O,
                                                    pretitle: t,
                                                    pretitleLinesMax: n,
                                                    title: i,
                                                    titleAs: d,
                                                    titleLinesMax: o,
                                                    subtitle: s,
                                                    subtitleLinesMax: v,
                                                    description: m,
                                                    descriptionLinesMax: c
                                                })
                                            ]
                                        }),
                                        !B && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                            style: (0, _css.applyCssVars)({
                                                [_cardcssmistica.vars.topActionsCount]: String(R.length)
                                            }),
                                            className: _cardcssmistica.dataCardTopActionsWithoutIcon
                                        })
                                    ]
                                }),
                                h && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                    ref: z,
                                    children: h
                                }),
                                (p || g) && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                    className: _cardcssmistica.actions,
                                    children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_buttongroup.default, {
                                        primaryButton: p,
                                        link: g
                                    })
                                })
                            ]
                        })
                    ]
                }))
            }),
            /* @__PURE__ */ (0, _jsxruntime.jsx)(Q, {
                onClose: C,
                actions: y,
                type: "default"
            })
        ]
    });
}), Ja = /*#__PURE__*/ _react.forwardRef((_param, g)=>{
    var { icon: a, title: r, titleAs: t = "h3", titleLinesMax: n, subtitle: i, subtitleLinesMax: d, description: o, descriptionLinesMax: s, dataAttributes: v, "aria-label": m, extra: c, isInverse: h = !1, aspectRatio: y } = _param, p = _object_without_properties(_param, [
        "icon",
        "title",
        "titleAs",
        "titleLinesMax",
        "subtitle",
        "subtitleLinesMax",
        "description",
        "descriptionLinesMax",
        "dataAttributes",
        "aria-label",
        "extra",
        "isInverse",
        "aspectRatio"
    ]);
    const { textPresets: N } = (0, _hooks.useTheme)(), x = !!(p.href || p.to || p.onPress), C = h ? _cardcssmistica.touchableCardOverlayInverse : _cardcssmistica.touchableCardOverlay, { text: T, ref: f } = S(), A = m || [
        r,
        i,
        o,
        T
    ].filter(Boolean).join(" ");
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(q, {
        dataAttributes: _object_spread({
            "component-name": "SnapCard"
        }, v),
        ref: g,
        className: _cardcssmistica.touchableContainer,
        aspectRatio: y,
        "aria-label": x ? void 0 : m,
        children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_boxed.Boxed, {
            className: _cardcssmistica.boxed,
            isInverse: h,
            width: "100%",
            minHeight: "100%",
            children: /* @__PURE__ */ (0, _jsxruntime.jsxs)(_touchable.BaseTouchable, _object_spread_props(_object_spread({
                maybe: !0
            }, p), {
                className: _cardcssmistica.touchable,
                "aria-label": x ? A : void 0,
                children: [
                    x && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                        className: C
                    }),
                    /* @__PURE__ */ (0, _jsxruntime.jsxs)("section", {
                        className: _cardcssmistica.snapCard,
                        children: [
                            /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
                                children: [
                                    a && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                        style: (0, _css.applyCssVars)({
                                            [_imagecssmistica.vars.mediaBorderRadius]: _skincontractcssmistica.vars.borderRadii.mediaSmall
                                        }),
                                        children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                                            paddingBottom: 16,
                                            children: a
                                        })
                                    }),
                                    /* @__PURE__ */ (0, _jsxruntime.jsxs)(_stack.default, {
                                        space: 4,
                                        children: [
                                            r && /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text, _object_spread_props(_object_spread({}, _text.textProps.text2), {
                                                truncate: n,
                                                weight: N.cardTitle.weight,
                                                as: t,
                                                hyphens: "auto",
                                                children: r
                                            })),
                                            i && /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                                                truncate: d,
                                                regular: !0,
                                                color: _skincontractcssmistica.vars.colors.textPrimary,
                                                as: "p",
                                                hyphens: "auto",
                                                children: i
                                            }),
                                            o && /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                                                truncate: s,
                                                regular: !0,
                                                color: _skincontractcssmistica.vars.colors.textSecondary,
                                                as: "p",
                                                hyphens: "auto",
                                                children: o
                                            })
                                        ]
                                    })
                                ]
                            }),
                            c && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                ref: f,
                                children: c
                            })
                        ]
                    })
                ]
            }))
        })
    });
}), Ee = (param)=>{
    let { title: a, headline: r, pretitle: t, subtitle: n, description: i, extra: d, headlineRef: o, extraRef: s } = param;
    return /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
        className: _cardcssmistica.flexColumn,
        children: [
            a && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                style: {
                    paddingBottom: n || i ? 4 : 0
                },
                children: a
            }),
            r && // assuming that the headline will always be followed by one of: pretitle, title, subtitle, description
            /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                ref: o,
                style: {
                    order: -2,
                    paddingBottom: 16
                },
                children: r
            }),
            t && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                style: {
                    order: -1,
                    paddingBottom: 4
                },
                children: t
            }),
            n && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                style: {
                    paddingBottom: n ? 4 : 0
                },
                children: n
            }),
            i && // this is tricky, the padding between a headline and a description is 16px
            // but the padding between a title|pretitle|subtitle and a description is 8px (4px + 4px)
            /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                style: {
                    paddingTop: t || a || n ? 4 : 0
                },
                children: i
            }),
            d && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                ref: s,
                children: d
            })
        ]
    });
}, Ge = /*#__PURE__*/ _react.forwardRef((_param, z)=>{
    var { isInverse: a, backgroundImage: r, backgroundVideo: t, backgroundVideoRef: n, poster: i, icon: d, headline: o, pretitle: s, pretitleLinesMax: v, title: m, titleAs: c = "h3", titleLinesMax: h, description: y, descriptionLinesMax: p, extra: g, button: N, secondaryButton: x, onClose: C, actions: T, buttonLink: f, dataAttributes: A, width: B, height: M, aspectRatio: V, "aria-label": O } = _param, I = _object_without_properties(_param, [
        "isInverse",
        "backgroundImage",
        "backgroundVideo",
        "backgroundVideoRef",
        "poster",
        "icon",
        "headline",
        "pretitle",
        "pretitleLinesMax",
        "title",
        "titleAs",
        "titleLinesMax",
        "description",
        "descriptionLinesMax",
        "extra",
        "button",
        "secondaryButton",
        "onClose",
        "actions",
        "buttonLink",
        "dataAttributes",
        "width",
        "height",
        "aspectRatio",
        "aria-label"
    ]);
    const R = r !== void 0, k = t !== void 0, H = Pe(r), { video: w, videoAction: U } = Ve(t, i, n), { text: de, ref: Y } = S(), { text: se, ref: le } = S();
    k && (T = U ? [
        U
    ] : []);
    const Z = (0, _themevariantcontext.useIsInverseVariant)(), E = R || k, X = E ? "0 0 16px rgba(0,0,0,0.4)" : void 0, j = (T == null ? void 0 : T.length) || C, F = !!(I.href || I.to || I.onPress), ee = R || k ? _cardcssmistica.touchableCardOverlayMedia : a ? _cardcssmistica.touchableCardOverlayInverse : _cardcssmistica.touchableCardOverlay, ce = O || [
        m,
        de,
        s,
        y,
        se
    ].filter(Boolean).join(" ");
    return /* @__PURE__ */ (0, _jsxruntime.jsxs)(q, {
        dataAttributes: A,
        ref: z,
        width: B,
        height: M,
        aspectRatio: V,
        "aria-label": F ? void 0 : O,
        className: _cardcssmistica.touchableContainer,
        children: [
            /* @__PURE__ */ (0, _jsxruntime.jsx)(_boxed.InternalBoxed, {
                borderRadius: _skincontractcssmistica.vars.borderRadii.legacyDisplay,
                className: _cardcssmistica.boxed,
                width: "100%",
                minHeight: "100%",
                isInverse: a,
                background: R || k ? Z ? _skincontractcssmistica.vars.colors.backgroundContainerBrandOverInverse : _skincontractcssmistica.vars.colors.backgroundContainer : void 0,
                children: /* @__PURE__ */ (0, _jsxruntime.jsxs)(_touchable.BaseTouchable, _object_spread_props(_object_spread({
                    maybe: !0
                }, I), {
                    className: _cardcssmistica.touchable,
                    "aria-label": F ? ce : void 0,
                    children: [
                        F && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                            className: ee
                        }),
                        /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
                            className: _cardcssmistica.displayCardContainer,
                            children: [
                                (R || k) && /* @__PURE__ */ (0, _jsxruntime.jsx)(_themevariantcontext.ThemeVariant, {
                                    isInverse: Z,
                                    children: /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                        className: _cardcssmistica.displayCardBackground,
                                        children: k ? w : H
                                    })
                                }),
                                /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
                                    className: _cardcssmistica.displayCardContent,
                                    style: {
                                        paddingTop: E && !d && !j && !k ? 0 : 24
                                    },
                                    children: [
                                        d ? /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                            style: (0, _css.applyCssVars)({
                                                [_imagecssmistica.vars.mediaBorderRadius]: _skincontractcssmistica.vars.borderRadii.mediaSmall
                                            }),
                                            children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                                                paddingBottom: E ? 0 : 40,
                                                paddingX: 24,
                                                children: d
                                            })
                                        }) : /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                                            paddingBottom: j || k ? E ? 24 : 64 : 0
                                        }),
                                        /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                                            paddingX: 24,
                                            paddingTop: E ? 40 : 0,
                                            paddingBottom: 24,
                                            className: E ? _cardcssmistica.displayCardGradient : void 0,
                                            children: /* @__PURE__ */ (0, _jsxruntime.jsxs)(_stack.default, {
                                                space: 24,
                                                children: [
                                                    /* @__PURE__ */ (0, _jsxruntime.jsx)(Ee, {
                                                        title: m ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text6, {
                                                            forceMobileSizes: !0,
                                                            truncate: h,
                                                            as: c,
                                                            textShadow: X,
                                                            hyphens: "auto",
                                                            children: m
                                                        }) : void 0,
                                                        headline: o,
                                                        pretitle: s ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                                                            forceMobileSizes: !0,
                                                            truncate: v,
                                                            as: "div",
                                                            regular: !0,
                                                            textShadow: X,
                                                            children: s
                                                        }) : void 0,
                                                        description: y ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text3, {
                                                            forceMobileSizes: !0,
                                                            truncate: p,
                                                            as: "p",
                                                            regular: !0,
                                                            color: E ? _skincontractcssmistica.vars.colors.textPrimary : _skincontractcssmistica.vars.colors.textSecondary,
                                                            textShadow: X,
                                                            hyphens: "auto",
                                                            children: y
                                                        }) : void 0,
                                                        extra: g,
                                                        headlineRef: Y,
                                                        extraRef: le
                                                    }),
                                                    (N || x || f) && /* @__PURE__ */ (0, _jsxruntime.jsx)(_buttongroup.default, {
                                                        primaryButton: N,
                                                        secondaryButton: x,
                                                        link: f
                                                    })
                                                ]
                                            })
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                }))
            }),
            /* @__PURE__ */ (0, _jsxruntime.jsx)(Q, {
                onClose: C,
                actions: T,
                type: R || k ? "media" : a ? "inverse" : "default"
            })
        ]
    });
}), Ka = /*#__PURE__*/ _react.forwardRef((_param, t)=>{
    var { dataAttributes: a } = _param, r = _object_without_properties(_param, [
        "dataAttributes"
    ]);
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(Ge, _object_spread_props(_object_spread({}, r), {
        ref: t,
        isInverse: !0,
        dataAttributes: _object_spread({
            "component-name": "DisplayMediaCard"
        }, a)
    }));
}), Qa = /*#__PURE__*/ _react.forwardRef((_param, t)=>{
    var { dataAttributes: a } = _param, r = _object_without_properties(_param, [
        "dataAttributes"
    ]);
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(Ge, _object_spread_props(_object_spread({}, r), {
        ref: t,
        dataAttributes: _object_spread({
            "component-name": "DisplayDataCard"
        }, a)
    }));
}), Ua = /*#__PURE__*/ _react.forwardRef((_param, k)=>{
    var { dataAttributes: a, backgroundImage: r, backgroundVideo: t, poster: n, backgroundVideoRef: i, width: d, height: o, aspectRatio: s = "7:10", ariaLabel: v, ["aria-label"]: m = v, actions: c, onClose: h, icon: y, headline: p, pretitle: g, pretitleLinesMax: N, title: x, titleAs: C = "h3", titleLinesMax: T, subtitle: f, subtitleLinesMax: A, description: B, descriptionLinesMax: M, extra: V, variant: O, isInverse: I, backgroundColor: z } = _param, R = _object_without_properties(_param, [
        "dataAttributes",
        "backgroundImage",
        "backgroundVideo",
        "poster",
        "backgroundVideoRef",
        "width",
        "height",
        "aspectRatio",
        "ariaLabel",
        "aria-label",
        "actions",
        "onClose",
        "icon",
        "headline",
        "pretitle",
        "pretitleLinesMax",
        "title",
        "titleAs",
        "titleLinesMax",
        "subtitle",
        "subtitleLinesMax",
        "description",
        "descriptionLinesMax",
        "extra",
        "variant",
        "isInverse",
        "backgroundColor"
    ]);
    const H = r !== void 0, w = t !== void 0, U = Pe(r), { video: de, videoAction: Y } = Ve(t, n, i), { text: se, ref: le } = S(), { text: Z, ref: E } = S();
    w && (c = Y ? [
        Y
    ] : []);
    const X = (0, _themevariantcontext.useIsInverseVariant)(), j = H || w, F = j ? "0 0 16px rgba(0,0,0,0.4)" : void 0, ee = (c == null ? void 0 : c.length) || h, { textPresets: ce } = (0, _hooks.useTheme)(), ae = !!(R.href || R.to || R.onPress), re = O || (I ? "inverse" : "default"), He = ()=>z || ({
            default: _skincontractcssmistica.vars.colors.backgroundContainer,
            inverse: X ? _skincontractcssmistica.vars.colors.backgroundContainerBrandOverInverse : _skincontractcssmistica.vars.colors.backgroundBrand,
            alternative: _skincontractcssmistica.vars.colors.backgroundAlternative
        })[re], Xe = H || w ? _cardcssmistica.touchableCardOverlayMedia : re === "inverse" ? _cardcssmistica.touchableCardOverlayInverse : _cardcssmistica.touchableCardOverlay, Fe = m || [
        x,
        se,
        g,
        f,
        B,
        Z
    ].filter(Boolean).join(" ");
    return /* @__PURE__ */ (0, _jsxruntime.jsxs)(q, {
        width: d,
        height: o,
        dataAttributes: _object_spread({
            "component-name": "PosterCard"
        }, a),
        ref: k,
        aspectRatio: s,
        className: _cardcssmistica.touchableContainer,
        "aria-label": ae ? void 0 : m,
        children: [
            /* @__PURE__ */ (0, _jsxruntime.jsx)(_boxed.InternalBoxed, {
                borderRadius: _skincontractcssmistica.vars.borderRadii.legacyDisplay,
                className: _cardcssmistica.boxed,
                width: "100%",
                minHeight: "100%",
                isInverse: H || w || re === "inverse",
                background: H || w ? X ? _skincontractcssmistica.vars.colors.backgroundContainerBrandOverInverse : _skincontractcssmistica.vars.colors.backgroundContainer : He(),
                children: /* @__PURE__ */ (0, _jsxruntime.jsxs)(_touchable.BaseTouchable, _object_spread_props(_object_spread({
                    maybe: !0
                }, R), {
                    className: _cardcssmistica.touchable,
                    "aria-label": ae ? Fe : void 0,
                    children: [
                        ae && /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                            className: Xe
                        }),
                        /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
                            className: _cardcssmistica.displayCardContainer,
                            "aria-hidden": ae,
                            children: [
                                (H || w) && /* @__PURE__ */ (0, _jsxruntime.jsx)(_themevariantcontext.ThemeVariant, {
                                    isInverse: X,
                                    children: /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                        className: _cardcssmistica.displayCardBackground,
                                        children: w ? de : U
                                    })
                                }),
                                /* @__PURE__ */ (0, _jsxruntime.jsxs)(_box.default, {
                                    className: _cardcssmistica.displayCardContent,
                                    paddingTop: j && !y && !ee && !w ? 0 : {
                                        mobile: y ? 16 : 24,
                                        desktop: 24
                                    },
                                    children: [
                                        y ? /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                                            style: (0, _css.applyCssVars)({
                                                [_imagecssmistica.vars.mediaBorderRadius]: _skincontractcssmistica.vars.borderRadii.mediaSmall
                                            }),
                                            children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                                                paddingBottom: j ? 0 : 40,
                                                paddingX: {
                                                    mobile: 16,
                                                    desktop: 24
                                                },
                                                children: y
                                            })
                                        }) : /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                                            paddingBottom: ee || w ? j ? 24 : 64 : 0
                                        }),
                                        /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                                            paddingX: {
                                                mobile: 16,
                                                desktop: 24
                                            },
                                            paddingTop: j ? 40 : 0,
                                            paddingBottom: 24,
                                            className: j ? _cardcssmistica.displayCardGradient : void 0,
                                            children: /* @__PURE__ */ (0, _jsxruntime.jsx)(Ee, {
                                                title: x ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text, _object_spread_props(_object_spread({}, _text.textProps.text4), {
                                                    truncate: T,
                                                    weight: ce.cardTitle.weight,
                                                    as: C,
                                                    children: x
                                                })) : void 0,
                                                headline: p,
                                                pretitle: g ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                                                    forceMobileSizes: !0,
                                                    truncate: N,
                                                    as: "div",
                                                    regular: !0,
                                                    textShadow: F,
                                                    children: g
                                                }) : void 0,
                                                subtitle: f ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                                                    forceMobileSizes: !0,
                                                    truncate: A,
                                                    as: "div",
                                                    regular: !0,
                                                    textShadow: F,
                                                    children: f
                                                }) : void 0,
                                                description: B ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                                                    forceMobileSizes: !0,
                                                    truncate: M,
                                                    as: "p",
                                                    regular: !0,
                                                    textShadow: F,
                                                    color: j ? _skincontractcssmistica.vars.colors.textPrimary : _skincontractcssmistica.vars.colors.textSecondary,
                                                    children: B
                                                }) : void 0,
                                                headlineRef: le,
                                                extra: V,
                                                extraRef: E
                                            })
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                }))
            }),
            /* @__PURE__ */ (0, _jsxruntime.jsx)(Q, {
                onClose: h,
                actions: c,
                type: H || w ? "media" : re === "inverse" ? "inverse" : "default"
            })
        ]
    });
});
