"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    TextTimer: function() {
        return fe;
    },
    Timer: function() {
        return Se;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _classnames = /*#__PURE__*/ _interop_require_default(require("classnames"));
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _box = /*#__PURE__*/ _interop_require_default(require("./box.js"));
const _hooks = require("./hooks.js");
const _inline = /*#__PURE__*/ _interop_require_default(require("./inline.js"));
const _screenreaderonly = /*#__PURE__*/ _interop_require_default(require("./screen-reader-only.js"));
const _text = require("./text.js");
const _themevariantcontext = require("./theme-variant-context.js");
const _timercssmistica = require("./timer.css-mistica.js");
const _dom = require("./utils/dom.js");
const _helpers = require("./utils/helpers.js");
const _platform = require("./utils/platform.js");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const V = 24, $ = 60, T = 60, _ = 1e3, Y = T * _, k = $ * Y, se = V * k, R = (n, s, a, u)=>{
    s = u === "none" && s === "days" ? "hours" : s, a = u === "none" && a === "days" ? "hours" : a;
    const i = [
        "seconds",
        "minutes",
        "hours",
        "days"
    ], d = i.indexOf(s), g = Math.max(i.indexOf(a), d), e = i.indexOf(n);
    return d <= e && e <= g;
}, E = (n, s, a, u)=>[
        {
            unit: "days",
            value: n.days
        },
        {
            unit: "hours",
            value: n.hours
        },
        {
            unit: "minutes",
            value: n.minutes
        },
        {
            unit: "seconds",
            value: n.seconds
        }
    ].filter((i)=>R(i.unit, s, a, u)), A = (n)=>(0, _platform.isRunningAcceptanceTest)() ? 0 : Math.max(0, (typeof n == "object" ? n : new Date(n)).valueOf() - Date.now()), q = (param)=>{
    let { endTimestamp: n, labelType: s, minTimeUnit: a, maxTimeUnit: u, onProgress: i } = param;
    const [d, g] = _react.useState(A(n));
    (0, _hooks.useIsomorphicLayoutEffect)(()=>{
        let v;
        const D = ()=>{
            const I = A(n);
            g(I), I || clearInterval(v);
        };
        if (!(0, _platform.isRunningAcceptanceTest)()) return D(), v = setInterval(D, _), ()=>clearInterval(v);
    }, [
        n
    ]);
    const e = R("days", a, u, s), S = R("hours", a, u, s), l = R("minutes", a, u, s), m = e ? "days" : S ? "hours" : l ? "minutes" : "seconds", y = Math.floor(d / k) % 24, p = Math.floor(d / Y) % 60, f = Math.floor(d / _) % 60, h = Math.floor(d / se), L = m === "hours" ? y + h * V : y, t = m === "minutes" ? p + $ * (h * V + L) : p, r = m === "seconds" ? f + T * (h * V * $ + L * $ + t) : f, [o, b] = _react.useState(E({
        days: h,
        hours: L,
        minutes: t,
        seconds: r
    }, a, u, s));
    return _react.useEffect(()=>{
        const v = E({
            days: h,
            hours: L,
            minutes: t,
            seconds: r
        }, a, u, s);
        if (!(0, _helpers.isEqual)(v, o)) {
            b(v);
            const D = {};
            v.forEach((I)=>D[I.unit] = I.value), i == null || i(D);
        }
    }, [
        h,
        L,
        t,
        r,
        s,
        a,
        u,
        o,
        i
    ]), o;
}, fe = (param)=>{
    let { endTimestamp: n, labelType: s = "none", minTimeUnit: a, maxTimeUnit: u, onProgress: i, dataAttributes: d, "aria-label": g } = param;
    const { texts: e } = (0, _hooks.useTheme)(), S = (0, _hooks.useAriaId)(), l = q({
        endTimestamp: n,
        labelType: s,
        minTimeUnit: a,
        maxTimeUnit: u,
        onProgress: i
    }), m = {
        days: e.timerDaysShortLabel,
        hours: e.timerHoursShortLabel,
        minutes: e.timerMinutesShortLabel,
        seconds: e.timerSecondsShortLabel
    }, y = {
        days: e.timerDayLongLabel,
        hours: e.timerHourLongLabel,
        minutes: e.timerMinuteLongLabel,
        seconds: e.timerSecondLongLabel
    }, p = {
        days: e.timerDaysLongLabel,
        hours: e.timerHoursLongLabel,
        minutes: e.timerMinutesLongLabel,
        seconds: e.timerSecondsLongLabel
    }, f = (t)=>{
        const r = Math.max(String(t).length, s === "long" ? 1 : 2);
        return /* @__PURE__ */ (0, _jsxruntime.jsx)("span", {
            className: _timercssmistica.unitContainer,
            style: {
                minWidth: `${r}ch`
            },
            children: String(t).padStart(r, "0")
        });
    }, h = ()=>{
        switch(s){
            case "none":
                return l.map((t, r)=>/* @__PURE__ */ (0, _jsxruntime.jsxs)(_react.Fragment, {
                        children: [
                            r > 0 && ":",
                            f(t.value)
                        ]
                    }, r));
            case "short":
                return l.map((t, r)=>/* @__PURE__ */ (0, _jsxruntime.jsxs)(_react.Fragment, {
                        children: [
                            r > 0 && " ",
                            /* @__PURE__ */ (0, _jsxruntime.jsxs)("span", {
                                className: _timercssmistica.shortLabelText,
                                children: [
                                    f(t.value),
                                    ` ${m[t.unit]}`
                                ]
                            })
                        ]
                    }, r));
            case "long":
            default:
                return l.map((t, r)=>/* @__PURE__ */ (0, _jsxruntime.jsxs)(_react.Fragment, {
                        children: [
                            r > 0 && " ",
                            f(t.value),
                            ` ${t.value === 1 ? y[t.unit] : p[t.unit]}`,
                            r === l.length - 2 && ` ${e.timerAnd}`,
                            r < l.length - 2 && ","
                        ]
                    }, r));
        }
    }, L = l.map((t, r)=>`${t.value} ${t.value === 1 ? y[t.unit] : p[t.unit]}${r === l.length - 1 ? "" : r === l.length - 2 ? ` ${e.timerAnd} ` : ", "}`).join("");
    return /* @__PURE__ */ (0, _jsxruntime.jsxs)("span", _object_spread_props(_object_spread({
        role: "timer",
        "aria-labelledby": S,
        className: _timercssmistica.inlineText,
        style: {
            // try to keep the timer in the same line without wrapping only when label is not long
            display: s !== "long" ? "inline-block" : void 0
        }
    }, (0, _dom.getPrefixedDataAttributes)(d, "TextTimer")), {
        children: [
            /* @__PURE__ */ (0, _jsxruntime.jsx)(_screenreaderonly.default, {
                children: /* @__PURE__ */ (0, _jsxruntime.jsx)("span", {
                    id: S,
                    children: g ? `${g}. ${L}` : L
                })
            }),
            /* @__PURE__ */ (0, _jsxruntime.jsx)("span", {
                "aria-hidden": !0,
                className: _timercssmistica.inlineText,
                children: h()
            })
        ]
    }));
}, Se = (param)=>{
    let { boxed: n, endTimestamp: s, minTimeUnit: a, maxTimeUnit: u, onProgress: i, dataAttributes: d, "aria-label": g } = param;
    const { texts: e } = (0, _hooks.useTheme)(), S = (0, _hooks.useAriaId)(), l = (0, _themevariantcontext.useThemeVariant)(), m = q({
        endTimestamp: s,
        minTimeUnit: a,
        maxTimeUnit: u,
        onProgress: i
    }), y = {
        days: e.timerDayLongLabel,
        hours: e.timerHourLongLabel,
        minutes: e.timerDisplayMinutesLabel,
        seconds: e.timerDisplaySecondsLabel
    }, p = {
        days: e.timerDaysLongLabel,
        hours: e.timerHoursLongLabel,
        minutes: e.timerDisplayMinutesLabel,
        seconds: e.timerDisplaySecondsLabel
    }, f = {
        days: e.timerDayLongLabel,
        hours: e.timerHourLongLabel,
        minutes: e.timerMinuteLongLabel,
        seconds: e.timerSecondLongLabel
    }, h = {
        days: e.timerDaysLongLabel,
        hours: e.timerHoursLongLabel,
        minutes: e.timerMinutesLongLabel,
        seconds: e.timerSecondsLongLabel
    }, L = (o)=>{
        const b = Math.max(String(o).length, 2);
        return /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text6, {
            children: /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                className: _timercssmistica.unitContainer,
                style: {
                    minWidth: `${b}ch`
                },
                children: String(o).padStart(b, "0")
            })
        });
    }, t = m.map((o, b)=>`${o.value} ${o.value === 1 ? f[o.unit] : h[o.unit]}${b === m.length - 1 ? "" : b === m.length - 2 ? ` ${e.timerAnd} ` : ", "}`).join(""), r = ()=>m.map((o, b)=>/* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                className: (0, _classnames.default)({
                    [_timercssmistica.boxedTimerValueContainer]: l === "default" && n,
                    [_timercssmistica.boxedTimerValueContainerInverse]: l !== "default" && n
                }),
                children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_themevariantcontext.ThemeVariant, {
                    variant: n ? "default" : l,
                    children: /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", {
                        className: (0, _classnames.default)(_timercssmistica.timerDisplayValue, {
                            [_timercssmistica.boxedTimerDisplayValue]: n
                        }),
                        children: [
                            L(o.value),
                            /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                                regular: !0,
                                children: o.value === 1 ? y[o.unit] : p[o.unit]
                            })
                        ]
                    })
                })
            }, b));
    return /* @__PURE__ */ (0, _jsxruntime.jsxs)("div", _object_spread_props(_object_spread({
        role: "timer",
        "aria-labelledby": S,
        className: _timercssmistica.timerWrapper
    }, (0, _dom.getPrefixedDataAttributes)(d, "Timer")), {
        children: [
            /* @__PURE__ */ (0, _jsxruntime.jsx)(_screenreaderonly.default, {
                children: /* @__PURE__ */ (0, _jsxruntime.jsx)("span", {
                    id: S,
                    children: g ? `${g}. ${t}` : t
                })
            }),
            /* @__PURE__ */ (0, _jsxruntime.jsx)("div", {
                "aria-hidden": !0,
                children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_inline.default, {
                    space: n ? 8 : 16,
                    wrap: !0,
                    children: r()
                })
            })
        ]
    }));
};
