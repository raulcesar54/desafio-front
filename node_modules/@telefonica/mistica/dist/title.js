"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    Title1: function() {
        return P;
    },
    Title2: function() {
        return A;
    },
    Title3: function() {
        return S;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _text = /*#__PURE__*/ _interop_require_wildcard(require("./text.js"));
const _inline = /*#__PURE__*/ _interop_require_default(require("./inline.js"));
const _box = /*#__PURE__*/ _interop_require_default(require("./box.js"));
const _skincontractcssmistica = require("./skins/skin-contract.css-mistica.js");
const _hooks = require("./hooks.js");
const _dom = require("./utils/dom.js");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const m = (param)=>{
    let { title: t, right: i, dataAttributes: o } = param;
    const { textPresets: r } = (0, _hooks.useTheme)();
    return i ? /* @__PURE__ */ (0, _jsxruntime.jsxs)(_inline.default, {
        space: "between",
        alignItems: "baseline",
        dataAttributes: o,
        children: [
            t,
            /* @__PURE__ */ (0, _jsxruntime.jsx)(_box.default, {
                paddingLeft: 16,
                children: /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text2, {
                    weight: r.link.weight,
                    children: i
                })
            })
        ]
    }) : /* @__PURE__ */ (0, _jsxruntime.jsx)("div", _object_spread_props(_object_spread({}, (0, _dom.getPrefixedDataAttributes)(o)), {
        children: t
    }));
}, P = (param)=>{
    let { children: t, as: i = "h3", id: o, right: r, dataAttributes: s } = param;
    const { textPresets: n } = (0, _hooks.useTheme)();
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(m, {
        title: /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text1, {
            color: _skincontractcssmistica.vars.colors.textSecondary,
            transform: "uppercase",
            weight: n.title1.weight,
            as: i,
            id: o,
            wordBreak: !1,
            children: t
        }),
        right: r,
        dataAttributes: _object_spread({
            "component-name": "Title1"
        }, s)
    });
}, A = (param)=>{
    let { children: t, as: i = "h3", id: o, right: r, dataAttributes: s } = param;
    const { textPresets: n } = (0, _hooks.useTheme)();
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(m, {
        title: /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.default, {
            as: i,
            id: o,
            mobileSize: n.title2.size.mobile,
            desktopSize: n.title2.size.desktop,
            weight: n.title2.weight,
            mobileLineHeight: n.title2.lineHeight.mobile,
            desktopLineHeight: n.title2.lineHeight.desktop,
            children: t
        }),
        right: r,
        dataAttributes: _object_spread({
            "component-name": "Title2"
        }, s)
    });
}, S = (param)=>{
    let { children: t, as: i = "h3", id: o, right: r, dataAttributes: s } = param;
    return /* @__PURE__ */ (0, _jsxruntime.jsx)(m, {
        title: /* @__PURE__ */ (0, _jsxruntime.jsx)(_text.Text6, {
            as: i,
            id: o,
            children: t
        }),
        right: r,
        dataAttributes: _object_spread({
            "component-name": "Title3"
        }, s)
    });
};
