"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return b;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _constants = require("../skins/constants.js");
const _animation = require("../utils/animation.js");
const _hooks = require("../hooks.js");
const _themevariantcontext = require("../theme-variant-context.js");
const _skincontractcssmistica = require("../skins/skin-contract.css-mistica.js");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
const k = (param)=>{
    let { size: t = 48, color: e, skipAnimation: r = !1 } = param;
    const i = (0, _themevariantcontext.useIsInverseVariant)(), { platformOverrides: o } = (0, _hooks.useTheme)();
    return /* @__PURE__ */ (0, _jsxruntime.jsx)("svg", {
        role: "presentation",
        width: t,
        height: t,
        viewBox: "0 0 64 64",
        children: /* @__PURE__ */ (0, _jsxruntime.jsxs)("g", {
            stroke: e ? void 0 : i ? _skincontractcssmistica.vars.colors.inverse : _skincontractcssmistica.vars.colors.brand,
            fill: e ? void 0 : i ? _skincontractcssmistica.vars.colors.inverse : _skincontractcssmistica.vars.colors.brand,
            strokeLinecap: "round",
            strokeLinejoin: "round",
            children: [
                /* @__PURE__ */ (0, _jsxruntime.jsx)("path", _object_spread({
                    fill: "none",
                    strokeWidth: "2",
                    stroke: e || void 0,
                    d: "M48.24,57.99c-4.71,2.95-10.27,4.65-16.24,4.65C15.08,62.64,1.36,48.92,1.36,32S15.08,1.36,32,1.36 S62.64,15.08,62.64,32c0,6.11-1.79,11.8-4.87,16.58"
                }, !r && (0, _animation.getAnimateDrawLineProps)("202", "0.3s", o))),
                /* @__PURE__ */ (0, _jsxruntime.jsx)("polyline", _object_spread({
                    fill: "none",
                    strokeWidth: "2",
                    stroke: e || void 0,
                    points: "16.92,30.08 28.68,43.12 50.26,20.22"
                }, !r && (0, _animation.mergeProperties)((0, _animation.getAnimateDrawLineProps)("50", "0.6s", o), (0, _animation.getAnimateHopInProps)("0.6", o)))),
                /* @__PURE__ */ (0, _jsxruntime.jsx)("circle", _object_spread({
                    stroke: e || void 0,
                    cx: "53.64",
                    cy: "53.54",
                    r: "1.06"
                }, !r && (0, _animation.getAnimateFadeInProps)("0.2s", o)))
            ]
        })
    });
}, m = (param)=>{
    let { size: t = 48, color: e, skipAnimation: r = !1 } = param;
    const i = (0, _themevariantcontext.useIsInverseVariant)(), { platformOverrides: o } = (0, _hooks.useTheme)();
    return /* @__PURE__ */ (0, _jsxruntime.jsx)("svg", {
        role: "presentation",
        width: t,
        height: t,
        viewBox: "0 0 64 64",
        children: /* @__PURE__ */ (0, _jsxruntime.jsxs)("g", {
            stroke: e ? void 0 : i ? _skincontractcssmistica.vars.colors.inverse : _skincontractcssmistica.vars.colors.brand,
            fill: e ? void 0 : i ? _skincontractcssmistica.vars.colors.inverse : _skincontractcssmistica.vars.colors.brand,
            strokeLinecap: "round",
            children: [
                /* @__PURE__ */ (0, _jsxruntime.jsx)("circle", _object_spread({
                    strokeWidth: "4",
                    stroke: e || void 0,
                    fill: "none",
                    cx: "32",
                    cy: "32",
                    r: "30"
                }, !r && (0, _animation.getAnimateDrawLineProps)("202", "0.3s", o))),
                /* @__PURE__ */ (0, _jsxruntime.jsx)("polyline", _object_spread({
                    fill: "none",
                    strokeWidth: "4",
                    stroke: e || void 0,
                    points: "18,32.67 27.33,42 49.33,20.67"
                }, !r && (0, _animation.mergeProperties)((0, _animation.getAnimateDrawLineProps)("50", "0.6s", o), (0, _animation.getAnimateHopInProps)("0.6", o))))
            ]
        })
    });
}, g = (param)=>{
    let { size: t = 48, color: e, skipAnimation: r = !1 } = param;
    const i = (0, _themevariantcontext.useIsInverseVariant)(), { platformOverrides: o } = (0, _hooks.useTheme)();
    return /* @__PURE__ */ (0, _jsxruntime.jsx)("svg", {
        role: "presentation",
        width: t,
        height: t,
        viewBox: "0 0 64 64",
        children: /* @__PURE__ */ (0, _jsxruntime.jsxs)("g", {
            stroke: e ? void 0 : i ? _skincontractcssmistica.vars.colors.inverse : _skincontractcssmistica.vars.colors.brand,
            children: [
                /* @__PURE__ */ (0, _jsxruntime.jsx)("path", _object_spread({
                    vectorEffect: "non-scaling-stroke",
                    fill: "none",
                    stroke: e || void 0,
                    strokeWidth: "2",
                    strokeMiterlimit: "10",
                    d: "M61.4,32c0,19.5-10,29.4-29.4,29.4C12.5,61.4,2.6,51.5,2.6,32S12.5,2.6,32,2.6S61.4,12.5,61.4,32z",
                    transform: "rotate(90 32 32)"
                }, !r && (0, _animation.getAnimateDrawLineProps)("202", "0.2s", o))),
                /* @__PURE__ */ (0, _jsxruntime.jsx)("polyline", _object_spread({
                    vectorEffect: "non-scaling-stroke",
                    fill: "none",
                    stroke: e || void 0,
                    strokeWidth: "2",
                    strokeMiterlimit: "10",
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    points: "20,34.9 27.4,44.3 45.6,21"
                }, !r && (0, _animation.mergeProperties)((0, _animation.getAnimateDrawLineProps)("44", "0.6s", o), (0, _animation.getAnimateHopInProps)("0.6s", o))))
            ]
        })
    });
}, I = (param)=>{
    let { size: t, color: e, skipAnimation: r } = param;
    const { skinName: i } = (0, _hooks.useTheme)();
    switch(i){
        case _constants.O2_SKIN:
            return /* @__PURE__ */ (0, _jsxruntime.jsx)(k, {
                size: t,
                color: e,
                skipAnimation: r
            });
        case _constants.O2_NEW_SKIN:
            return /* @__PURE__ */ (0, _jsxruntime.jsx)(m, {
                size: t,
                color: e,
                skipAnimation: r
            });
        default:
            return /* @__PURE__ */ (0, _jsxruntime.jsx)(g, {
                size: t,
                color: e,
                skipAnimation: r
            });
    }
}, b = I;
