"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DialogRoot: function() {
        return C;
    },
    alert: function() {
        return p;
    },
    confirm: function() {
        return x;
    },
    dialog: function() {
        return w;
    },
    useDialog: function() {
        return f;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const c = /*#__PURE__*/ _react.createContext({
    mounted: !1,
    dialog: null,
    setDialog: ()=>{}
}), m = /*#__PURE__*/ _react.lazy(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require(/* webpackChunkName: "dialog" */ "./dialog.js")))), a = ()=>{
    throw Error("Tried to show a dialog but the DialogRoot component was not mounted (missing ThemeContextProvider?)");
}, f = ()=>{
    const { dialog: o, setDialog: s, mounted: i } = _react.useContext(c), n = _react.useCallback((t)=>{
        if (i || a(), t && o) throw Error("Tried to show a dialog on top of another dialog");
        s(t);
    }, [
        s,
        o,
        i
    ]);
    return _react.useMemo(()=>({
            alert: (t)=>n(_object_spread({
                    type: "alert"
                }, t)),
            confirm: (t)=>n(_object_spread({
                    type: "confirm"
                }, t)),
            dialog: (t)=>n(_object_spread({
                    type: "dialog"
                }, t))
        }), [
        n
    ]);
}, g = {
    alert: a,
    confirm: a,
    dialog: a
};
let l = g;
const D = ()=>{
    const o = f();
    return _react.useEffect(()=>(l = o, ()=>{
            l = g;
        }), [
        o
    ]), /* @__PURE__ */ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {});
}, p = (o)=>l.alert(o), x = (o)=>l.confirm(o), w = (o)=>l.dialog(o), C = (param)=>{
    let { children: o } = param;
    const { mounted: s } = _react.useContext(c), [i, n] = _react.useState(null), t = _react.useMemo(()=>({
            mounted: !0,
            dialog: i,
            setDialog: n
        }), [
        i,
        n
    ]);
    return s ? /* @__PURE__ */ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
        children: o
    }) : /* @__PURE__ */ (0, _jsxruntime.jsxs)(c.Provider, {
        value: t,
        children: [
            /* @__PURE__ */ (0, _jsxruntime.jsx)(D, {}),
            o,
            i && /* @__PURE__ */ (0, _jsxruntime.jsx)(_react.Suspense, {
                fallback: null,
                children: /* @__PURE__ */ (0, _jsxruntime.jsx)(m, _object_spread_props(_object_spread({}, i), {
                    onDestroy: ()=>{
                        n(null);
                    }
                }))
            })
        ]
    });
};
