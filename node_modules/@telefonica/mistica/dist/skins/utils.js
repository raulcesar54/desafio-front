"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    flattenChildren: function() {
        return V;
    },
    getSkinByName: function() {
        return B;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _constants = require("./constants.js");
const _blau = require("./blau.js");
const _telefonica = require("./telefonica.js");
const _vivo = require("./vivo.js");
const _vivonew = require("./vivo-new.js");
const _o2 = require("./o2.js");
const _o2new = require("./o2-new.js");
const _movistar = require("./movistar.js");
const _tu = require("./tu.js");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const B = (r, o)=>{
    switch(r){
        case _constants.BLAU_SKIN:
            return (0, _blau.getBlauSkin)();
        case _constants.TELEFONICA_SKIN:
            return (0, _telefonica.getTelefonicaSkin)();
        case _constants.VIVO_SKIN:
            return (0, _vivo.getVivoSkin)();
        case _constants.VIVO_NEW_SKIN:
            return (0, _vivonew.getVivoNewSkin)();
        case _constants.O2_SKIN:
            return (0, _o2.getO2Skin)();
        case _constants.O2_NEW_SKIN:
            return (0, _o2new.getO2NewSkin)();
        case _constants.MOVISTAR_SKIN:
            return (0, _movistar.getMovistarSkin)();
        case _constants.TU_SKIN:
            return (0, _tu.getTuSkin)();
        default:
            throw Error("Unknown skin name: " + r);
    }
}, V = (r)=>_react.Children.toArray(r).reduce((t, e)=>e.type === _react.Fragment ? t.concat(V(e.props.children)) : (t.push(e), t), []);
