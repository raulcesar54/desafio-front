"use client";
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
import { jsx as r, jsxs as _ } from "react/jsx-runtime";
import * as s from "react";
import { BaseTouchable as P } from "./touchable.js";
import { buttonContainer as $, iconButtonTokens as C, minimumInteractiveArea as D, disabled as K, overlayContainer as M, bleedLeft as Y, bleedRight as Z, bleedY as q, iconContainer as F, isLoading as G, overlay as H, icon as J, iconSize as N, spinner as Q, deprecatedIconButtonBase as W } from "./icon-button.css-mistica.js";
import g from "classnames";
import X from "./spinner.js";
import { useThemeVariant as U } from "./theme-variant-context.js";
const ee = 24, te = (e, t, i, o, n)=>{
    const c = o ? `${o}px ${o}px` : "100% 100%";
    return {
        padding: 0,
        backgroundColor: i,
        backgroundImage: e ? `url(${e})` : "initial",
        backgroundSize: c,
        cursor: n ? "default" : "pointer",
        height: t,
        width: t,
        verticalAlign: "middle",
        textAlign: "center"
    };
}, ne = /*#__PURE__*/ s.forwardRef((e, t)=>{
    const { icon: i, children: o } = e, n = _object_without_properties(e, [
        "icon",
        "children"
    ]);
    return /* @__PURE__ */ r(P, _object_spread_props(_object_spread({
        ref: t
    }, n), {
        maybe: !0,
        stopPropagation: !0,
        dataAttributes: _object_spread({
            "component-name": "IconButton"
        }, e.dataAttributes),
        children: !i && s.Children.only(o)
    }));
}), T = /*#__PURE__*/ s.forwardRef((_param, x)=>{
    var { disabled: e, trackingEvent: t, role: i, dataAttributes: o, type: n = "neutral", backgroundType: c = "transparent", isOverMedia: S, hasOverlay: B = !0, "aria-label": u, "aria-labelledby": m, small: R, Icon: f, bleedLeft: d, bleedRight: v, bleedY: h, showSpinner: A } = _param, b = _object_without_properties(_param, [
        "disabled",
        "trackingEvent",
        "role",
        "dataAttributes",
        "type",
        "backgroundType",
        "isOverMedia",
        "hasOverlay",
        "aria-label",
        "aria-labelledby",
        "small",
        "Icon",
        "bleedLeft",
        "bleedRight",
        "bleedY",
        "showSpinner"
    ]);
    const z = U(), [k, p] = s.useState(!1), a = A || k, [I, y] = s.useState(!!a);
    s.useEffect(()=>{
        a && !I && y(!0);
    }, [
        a,
        I
    ]);
    const l = R ? "small" : "default", O = S ? `${n}-media` : `${n}-${c}-${z}`, E = {
        disabled: e || a,
        ref: x,
        trackingEvent: t,
        role: i,
        "aria-label": u,
        "aria-labelledby": m,
        dataAttributes: _object_spread({
            "component-name": "IconButton"
        }, o),
        className: g($[l], C[O], D, {
            [K]: e,
            [M]: !e && !a,
            [Y[l]]: d,
            [Z[l]]: v,
            [q[l]]: h
        }),
        resetMargin: !d && !v && !h
    }, j = /* @__PURE__ */ _("div", {
        className: g(F[l], {
            [G]: a
        }),
        children: [
            B && /* @__PURE__ */ r("div", {
                className: H
            }),
            /* @__PURE__ */ r("div", {
                "aria-hidden": a ? !0 : void 0,
                className: J,
                children: /* @__PURE__ */ r(f, {
                    size: N[l],
                    color: "currentColor"
                })
            }),
            /* @__PURE__ */ r("div", {
                "aria-hidden": a ? void 0 : !0,
                className: Q,
                onTransitionEnd: ()=>{
                    a !== I && y(a);
                },
                children: I && /* @__PURE__ */ r(X, {
                    size: N[l],
                    color: "currentColor",
                    delay: "0s"
                })
            })
        ]
    });
    if (b.onPress) {
        const L = b.onPress;
        b.onPress = (V)=>{
            const w = L(V);
            w && (p(!0), w.finally(()=>p(!1)));
        };
    }
    return /* @__PURE__ */ r(P, _object_spread_props(_object_spread({}, E, b), {
        maybe: !0,
        children: j
    }));
}), re = /*#__PURE__*/ s.forwardRef((e, t)=>{
    if (e.Icon) return /* @__PURE__ */ r(T, _object_spread({
        ref: t
    }, e));
    const { icon: i, backgroundColor: o = "transparent", iconSize: n, size: c = ee } = e;
    return /* @__PURE__ */ r(ne, _object_spread_props(_object_spread({
        ref: t
    }, e), {
        className: g(W, e.className),
        style: _object_spread({}, te(i, c, o, n, e.disabled), e.style)
    }));
}), ue = /*#__PURE__*/ s.forwardRef((e, t)=>/* @__PURE__ */ r(re, _object_spread({
        ref: t
    }, e))), oe = /*#__PURE__*/ s.forwardRef((_param, B)=>{
    var { checked: e, defaultChecked: t, checkedProps: i, uncheckedProps: o, onChange: n, dataAttributes: c } = _param, S = _object_without_properties(_param, [
        "checked",
        "defaultChecked",
        "checkedProps",
        "uncheckedProps",
        "onChange",
        "dataAttributes"
    ]);
    const [u, m] = s.useState(!!t), R = ()=>{
        if (e === void 0) {
            const f = n == null ? void 0 : n(!u);
            if (f) return f.then(()=>m((d)=>!d)).catch(()=>{});
            m((d)=>!d);
        } else return n == null ? void 0 : n(!e);
    };
    return /* @__PURE__ */ r(T, _object_spread_props(_object_spread({
        ref: B
    }, S, (e !== null && e !== void 0 ? e : u) ? i : o), {
        dataAttributes: _object_spread({
            "component-name": "ToggleIconButton"
        }, c),
        onPress: R
    }));
}), me = /*#__PURE__*/ s.forwardRef((e, t)=>/* @__PURE__ */ r(oe, _object_spread({
        ref: t
    }, e)));
export { ue as IconButton, re as InternalIconButton, oe as InternalToggleIconButton, ne as RawDeprecatedIconButton, T as RawIconButton, me as ToggleIconButton };
