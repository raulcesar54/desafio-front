function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
import { jsx as p } from "react/jsx-runtime";
import * as v from "react";
import z from "classnames";
import { sprinkles as A } from "./sprinkles.css-mistica.js";
import { getPrefixedDataAttributes as C } from "./utils/dom.js";
const D = /*#__PURE__*/ v.forwardRef((param, k)=>{
    let { className: i, children: f, width: l, padding: a = 0, paddingX: b = a, paddingY: m = a, paddingTop: e = m, paddingBottom: o = m, paddingLeft: r = b, paddingRight: t = b, role: x, id: y, dataAttributes: j, "aria-label": u, "aria-hidden": S } = param;
    const n = {
        paddingTop: e,
        paddingBottom: o,
        paddingLeft: r,
        paddingRight: t
    };
    let c = {}, s = "";
    try {
        s = A(n);
    } catch (e1) {
        c = {
            paddingTop: typeof e == "object" ? e.mobile : e,
            paddingBottom: typeof o == "object" ? o.mobile : o,
            paddingLeft: typeof r == "object" ? r.mobile : r,
            paddingRight: typeof t == "object" ? t.mobile : t
        };
    }
    return /* @__PURE__ */ p("div", _object_spread_props(_object_spread({}, C(j)), {
        role: x,
        "aria-label": u,
        "aria-hidden": S,
        ref: k,
        className: z(i, s),
        style: _object_spread({}, l !== void 0 ? {
            width: l,
            boxSizing: "border-box"
        } : {}, s ? {} : c),
        id: y,
        children: f
    }));
}), w = D;
export { w as default };
