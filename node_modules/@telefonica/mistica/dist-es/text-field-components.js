"use client";
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
import { jsxs as m, jsx as t, Fragment as y } from "react/jsx-runtime";
import * as p from "react";
import c from "classnames";
import { useIsInverseVariant as N } from "./theme-variant-context.js";
import { useTheme as C } from "./hooks.js";
import { Text1 as v } from "./text.js";
import { labelContainer as k, shrinked as S, labelText as E, helperText as b, leftText as I, rightText as F, fieldContainer as L, fullWidth as P, normalWidth as W, disabled as j, field as w, helperContainer as A } from "./text-field-components.css-mistica.js";
import { sprinkles as T } from "./sprinkles.css-mistica.js";
import { vars as e } from "./skins/skin-contract.css-mistica.js";
import { getPrefixedDataAttributes as D } from "./utils/dom.js";
const J = (param)=>{
    let { shrinkLabel: o, forId: s, inputState: r, error: l, children: i, style: n, optional: a } = param;
    const f = o || r === "focused" || r === "filled", [u, h] = p.useState("initial"), { texts: d } = C();
    p.useEffect(()=>{
        const g = setTimeout(()=>{
            process.env.NODE_ENV !== "test" && h("transform 150ms, width 150ms");
        });
        return ()=>{
            clearTimeout(g);
        };
    }, []);
    let x = e.colors.textSecondary;
    return l && r !== "default" ? x = e.colors.textError : r === "focused" && (x = e.colors.textActivated), /* @__PURE__ */ m("label", {
        className: c(k, {
            [S]: f
        }, T({
            color: x
        })),
        htmlFor: s,
        style: _object_spread_props(_object_spread({}, n), {
            transition: u
        }),
        children: [
            /* @__PURE__ */ t("span", {
                className: E,
                children: i
            }),
            a ? /* @__PURE__ */ m("span", {
                children: [
                    "\xa0(",
                    d.formFieldOptionalLabelSuffix,
                    ")"
                ]
            }) : null
        ]
    });
}, K = (param)=>{
    let { leftText: o, rightText: s, error: r, id: l } = param;
    const i = N(), n = i ? e.colors.textPrimaryInverse : r ? e.colors.textError : e.colors.textSecondary, a = i ? e.colors.textPrimaryInverse : e.colors.textSecondary;
    return /* @__PURE__ */ m(y, {
        children: [
            o && /* @__PURE__ */ t("div", {
                className: c(b, I),
                children: /* @__PURE__ */ t(v, {
                    color: n,
                    regular: !0,
                    as: "p",
                    id: l,
                    children: o
                })
            }),
            s && /* @__PURE__ */ t("div", {
                className: c(b, F),
                children: /* @__PURE__ */ t(v, {
                    color: a,
                    regular: !0,
                    as: "p",
                    children: s
                })
            })
        ]
    });
}, M = (param)=>{
    let { multiline: o, disabled: s, children: r, helperText: l, className: i, fieldRef: n, fullWidth: a, readOnly: f, dataAttributes: u } = param;
    return(// eslint-disable-next-line jsx-a11y/no-static-element-interactions
    /* @__PURE__ */ m("div", _object_spread_props(_object_spread({
        className: c(L, a ? P : W, {
            [j]: s
        }),
        onClick: (h)=>{
            var d;
            (d = h.currentTarget.querySelector(o ? "textarea" : "input")) == null || d.focus();
        }
    }, D(u)), {
        children: [
            /* @__PURE__ */ t("div", {
                className: c(w, T({
                    background: f ? e.colors.neutralLow : e.colors.backgroundContainer
                }), i),
                ref: n,
                children: r
            }),
            l && /* @__PURE__ */ t("div", {
                className: A,
                children: l
            })
        ]
    })));
};
export { M as FieldContainer, K as HelperText, J as Label };
