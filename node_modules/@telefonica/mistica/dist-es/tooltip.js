"use client";
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
import { jsx as n, jsxs as D, Fragment as ht } from "react/jsx-runtime";
import * as i from "react";
import { useTheme as Tt, useAriaId as gt, useBoundingRect as it, useWindowSize as vt } from "./hooks.js";
import { Portal as xt } from "./portal.js";
import { Transition as bt } from "react-transition-group";
import { content as Mt, CONTENT_MIN_WIDTH as Et, container as St, tooltipTransitionClasses as wt, tooltip as It, contentContainer as Ot, tooltipCenter as Rt, closeButtonIcon as _t, arrowContainer as Nt, arrow as Ct } from "./tooltip.css-mistica.js";
import yt from "./stack.js";
import { Text2 as nt } from "./text.js";
import { getCssVarValue as kt } from "./utils/dom.js";
import { TAB as Lt, ESC as At } from "./utils/keys.js";
import { isTouchableDevice as $t } from "./utils/environment.js";
import { isEqual as at } from "./utils/helpers.js";
import Q from "classnames";
import { vars as tt } from "./skins/skin-contract.css-mistica.js";
import { useIsInverseVariant as Ft, ThemeVariant as Dt } from "./theme-variant-context.js";
import { combineRefs as Bt } from "./utils/common.js";
import { useTooltipState as Wt, useSetTooltipState as Vt } from "./tooltip-context-provider.js";
import { isRunningAcceptanceTest as Ht } from "./utils/platform.js";
import { IconButton as Xt } from "./icon-button.js";
import zt from "./generated/mistica-icons/icon-close-regular.js";
import Pt from "./box.js";
const lt = (t)=>({
        border: `1px solid ${t ? tt.colors.backgroundContainer : tt.colors.border}`
    }), ct = 496, Yt = 300, Gt = 500, Kt = 100, p = 20, w = 6, N = w + p / 2 + 1, Ut = (t)=>{
    switch(t){
        case "left":
            return `translateX(-${w}px)`;
        case "right":
            return `translateX(${w}px)`;
        case "top":
            return `translateY(-${w}px)`;
        case "bottom":
            return `translateY(${w}px)`;
        default:
            return "";
    }
}, pt = (t)=>{
    const h = parseFloat(getComputedStyle(t, null).paddingLeft) + parseFloat(getComputedStyle(t, null).paddingRight), v = parseFloat(getComputedStyle(t, null).paddingTop) + parseFloat(getComputedStyle(t, null).paddingBottom), d = t.offsetWidth - h, m = t.offsetHeight - v;
    return {
        width: d,
        height: m
    };
}, ft = (t, h, v, d, m)=>{
    if (!t || !h) return;
    const { top: x, bottom: I, left: B, right: W } = t, o = d - I, O = m - W, R = x, a = B, { width: X, height: V } = pt(h), _ = X + N, T = V + N, b = _ <= Math.max(a, O), M = T <= Math.max(o, R);
    if (!(!M && !b)) switch(v){
        case "left":
            return b ? _ <= a ? "left" : "right" : o > R ? "bottom" : "top";
        case "right":
            return b ? _ <= O ? "right" : "left" : o > R ? "bottom" : "top";
        case "top":
            return M ? T <= R ? "top" : "bottom" : a > O ? "left" : "right";
        case "bottom":
            return M ? T <= o ? "bottom" : "top" : a > O ? "left" : "right";
        default:
            return;
    }
}, jt = (param)=>{
    let { content: t, target: h, width: v, position: d = "top", dataAttributes: m, delay: x = !0, centerContent: I, open: B, onClose: W, hasPointerInteractionOnly: o = !1, trackingEvent: O } = param;
    const { texts: R } = Tt(), a = gt(), { openTooltipId: X } = Wt(), { openTooltip: V, closeTooltip: _ } = Vt(), [T, b] = i.useState(), [M, z] = i.useState(), P = i.useRef(null), Y = i.useRef(null), [C, dt] = i.useState(null), u = $t(), G = x ? Gt : 0, [et, K] = i.useState(!1), [U, y] = i.useState(!1), j = B !== void 0, [ot, q] = i.useState(!1), E = j ? B : a === X, Z = Ft(), f = it(P, E), H = it(Y, E, !0), l = vt(), S = i.useCallback(()=>{
        q(!1), K(!1), y(!1);
    }, []);
    i.useEffect(()=>{
        E || S();
    }, [
        E,
        S
    ]), i.useEffect(()=>{
        if (!C || !E) return;
        const s = ft(f, C, d, l.height, l.width);
        if (!s || !f) {
            b(void 0), z(void 0), S();
            return;
        }
        let r, e;
        var _parseInt;
        const { left: c, right: k, top: L, bottom: A } = f, { width: $, height: F } = pt(C), rt = l.width - $, st = l.height - F, g = (_parseInt = parseInt(kt(tt.borderRadii.popup))) !== null && _parseInt !== void 0 ? _parseInt : 8;
        switch(s){
            case "top":
                r = {
                    left: Math.max(0, Math.min(rt, (c + k - $) / 2)),
                    top: L - F - p / 2,
                    padding: `0px 0px ${N}px 0px`
                }, e = {
                    left: Math.max(g, Math.min(l.width - g - p, (c + k - p) / 2)),
                    top: "100%"
                };
                break;
            case "bottom":
                r = {
                    left: Math.max(0, Math.min(rt, (c + k - $) / 2)),
                    top: A - w,
                    padding: `${N}px 0px 0px 0px`
                }, e = {
                    left: Math.max(g, Math.min(l.width - g - p, (c + k - p) / 2)),
                    bottom: "100%",
                    transform: "rotate(180deg)"
                };
                break;
            case "left":
                r = {
                    left: c - $ - p / 2,
                    top: Math.max(0, Math.min(st, (L + A - F) / 2)),
                    padding: `0px ${N}px 0px 0px`
                }, e = {
                    top: Math.max(g, Math.min(l.height - g - p, (L + A - p) / 2)),
                    left: "100%",
                    transform: "rotate(-90deg)",
                    transformOrigin: "bottom"
                };
                break;
            case "right":
            default:
                r = {
                    left: k - w,
                    top: Math.max(0, Math.min(st, (L + A - F) / 2)),
                    padding: `0px 0px 0px ${N}px`
                }, e = {
                    top: Math.max(g, Math.min(l.height - g - p, (L + A - p) / 2)),
                    right: "100%",
                    transform: "rotate(90deg)",
                    transformOrigin: "bottom"
                };
                break;
        }
        typeof e.top == "number" && (e.top -= r.top, e.top = `${e.top / F * 100}%`), typeof e.left == "number" && (e.left -= r.left, e.left = `${e.left / $ * 100}%`), at(r, T) || b(r), at(e, M) || z(e);
    }, [
        C,
        f,
        H,
        E,
        d,
        l,
        T,
        M,
        Z,
        u,
        a,
        S
    ]);
    const J = i.useRef(!1);
    i.useEffect(()=>{
        const s = (c)=>{
            switch(c.key){
                case At:
                    o || S();
                    break;
                case Lt:
                    J.current = !0;
                    break;
            }
        }, r = ()=>J.current = !1, e = (c)=>{
            !o && u && f && (c.clientX < f.left || c.clientX > f.right || c.clientY < f.top || c.clientY > f.bottom) && S();
        };
        return document.addEventListener("keydown", s, !1), document.addEventListener("keyup", r, !1), document.addEventListener("click", e, !1), ()=>{
            document.removeEventListener("keydown", s, !1), document.removeEventListener("keyup", r, !1), document.removeEventListener("click", e, !1);
        };
    }, [
        u,
        S,
        f,
        o
    ]), i.useEffect(()=>{
        j || (U || et || ot ? V(a) : _(a));
    }, [
        U,
        et,
        ot,
        a,
        V,
        _,
        j
    ]);
    const mt = ft(f, C, d, l.height, l.width), ut = I !== void 0 ? I : (H == null ? void 0 : H.width) === Et;
    return /* @__PURE__ */ D(ht, {
        children: [
            /* @__PURE__ */ n("div", {
                ref: (s)=>{
                    const r = s == null ? void 0 : s.firstElementChild;
                    r && r !== P.current && (P.current = r);
                },
                onMouseOver: ()=>{
                    !u && !o && y(!0);
                },
                onMouseLeave: ()=>{
                    !u && !o && y(!1);
                },
                onClick: ()=>{
                    (u || o) && y(o ? !U : !0);
                },
                onFocus: ()=>{
                    J.current && !o && q(!0);
                },
                onBlur: ()=>{
                    !u && !o && q(!1);
                },
                "aria-describedby": a,
                children: h
            }),
            /* @__PURE__ */ n(xt, {
                children: /* @__PURE__ */ n(bt, {
                    in: E,
                    nodeRef: Y,
                    timeout: Ht() ? 0 : {
                        enter: Yt + G,
                        exit: Kt
                    },
                    onExited: ()=>{
                        b(void 0), z(void 0);
                    },
                    mountOnEnter: !0,
                    unmountOnExit: !0,
                    children: (s)=>/* @__PURE__ */ n("div", _object_spread_props(_object_spread({
                            style: {
                                /**
               * Hack to prevent text from wrapping automatically when touching the viewport's edges,
               * even if the content's width didn't reach the max width.
               * https://stackoverflow.com/questions/66106629/how-to-disable-text-wrapping-when-viewport-border-is-reached
               */ width: `calc(100vw + ${ct}px)`,
                                top: 0,
                                left: 0,
                                position: "fixed",
                                visibility: T ? "visible" : "hidden"
                            }
                        }, m), {
                            role: "tooltip",
                            "aria-label": a,
                            tabIndex: -1,
                            children: /* @__PURE__ */ n("div", {
                                className: Q(St),
                                style: _object_spread_props(_object_spread({
                                    pointerEvents: s === "entered" ? "auto" : "none",
                                    transform: Ut(mt)
                                }, T, wt[s]), {
                                    transition: s === "entering" ? `opacity .1s linear ${G}ms,transform .3s cubic-bezier(0.215,0.61,0.335,1) ${G}ms` : "opacity .1s linear"
                                }),
                                ref: Bt(dt, Y),
                                onMouseEnter: ()=>{
                                    !u && s === "entered" && !o && K(!0);
                                },
                                onMouseLeave: ()=>{
                                    !u && !o && K(!1);
                                },
                                children: /* @__PURE__ */ D("div", {
                                    className: It,
                                    style: _object_spread_props(_object_spread({
                                        width: v
                                    }, lt(Z)), {
                                        maxWidth: Math.min(ct, l.width)
                                    }),
                                    children: [
                                        /* @__PURE__ */ n("div", {
                                            className: Q(Ot, {
                                                [Rt]: ut
                                            }),
                                            children: /* @__PURE__ */ D(Dt, {
                                                isInverse: !1,
                                                children: [
                                                    t,
                                                    W && /* @__PURE__ */ n("div", {
                                                        className: _t,
                                                        children: /* @__PURE__ */ n(Xt, {
                                                            onPress: ()=>{
                                                                y(!1), W();
                                                            },
                                                            trackingEvent: O,
                                                            "aria-label": R.modalClose,
                                                            Icon: zt,
                                                            small: !0
                                                        })
                                                    })
                                                ]
                                            })
                                        }),
                                        /* @__PURE__ */ n("div", {
                                            className: Nt,
                                            style: M,
                                            children: /* @__PURE__ */ n("div", {
                                                className: Q(Ct),
                                                style: lt(Z)
                                            })
                                        })
                                    ]
                                })
                            })
                        }))
                })
            })
        ]
    });
}, qt = (_param)=>{
    var { centerContent: t, extra: h, children: v, dataAttributes: d, title: m, description: x } = _param, I = _object_without_properties(_param, [
        "centerContent",
        "extra",
        "children",
        "dataAttributes",
        "title",
        "description"
    ]);
    return /* @__PURE__ */ n(jt, _object_spread({
        content: /* @__PURE__ */ D(Pt, {
            className: Mt,
            children: [
                (m || x) && /* @__PURE__ */ D(yt, {
                    space: 4,
                    children: [
                        m && /* @__PURE__ */ n(nt, {
                            medium: !0,
                            children: m
                        }),
                        x && /* @__PURE__ */ n(nt, {
                            regular: !0,
                            children: x
                        })
                    ]
                }),
                h !== null && h !== void 0 ? h : v
            ]
        }),
        centerContent: t,
        dataAttributes: _object_spread({
            "component-name": "Tooltip"
        }, d)
    }, I));
}, ge = qt;
export { jt as BaseTooltip, ge as default };
