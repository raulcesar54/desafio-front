"use client";
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
import { jsx as o, jsxs as M } from "react/jsx-runtime";
import * as l from "react";
import { useForm as j, useFieldProps as D } from "./form-context.js";
import { useTheme as L } from "./hooks.js";
import { getCreditCardNumberLength as A, isAmericanExpress as I, isVisa as b, isMasterCard as x, isValidCreditCardNumber as O } from "./utils/credit-card.js";
import { TextFieldBaseAutosuggest as U } from "./text-field-base.js";
import w from "./generated/mistica-icons/icon-credit-card-visa-regular.js";
import _ from "./icons/icon-visa.js";
import P from "./icons/icon-mastercard.js";
import $ from "./icons/icon-amex.js";
import { useRifm as q } from "rifm";
import { createChangeEvent as G } from "./utils/dom.js";
import { combineRefs as H } from "./utils/common.js";
import { flip as J, variants as K, flipFront as Q, flipBack as W } from "./credit-card-number-field.css-mistica.js";
import { vars as X } from "./skins/skin-contract.css-mistica.js";
import { iconSize as p } from "./icon-button.css-mistica.js";
const Y = (r)=>{
    var t;
    const n = String(r !== null && r !== void 0 ? r : "").replace(/[^\d]/g, "");
    var _ref;
    return (_ref = (t = n.match(/.{1,4}/g)) == null ? void 0 : t.join(" ")) !== null && _ref !== void 0 ? _ref : n;
}, Z = (_param)=>{
    var { inputRef: r, value: n, defaultValue: t, onChange: e } = _param, a = _object_without_properties(_param, [
        "inputRef",
        "value",
        "defaultValue",
        "onChange"
    ]);
    const [c, T] = l.useState(t !== null && t !== void 0 ? t : ""), m = l.useRef(null), f = typeof n < "u", u = f ? n : c, g = l.useCallback((C)=>{
        f || T(C), m.current && (e == null || e(G(m.current, C)));
    }, [
        f,
        e
    ]), d = q({
        format: Y,
        value: u,
        onChange: g,
        accept: /[\d]+/g
    });
    return /* @__PURE__ */ o("input", _object_spread_props(_object_spread({}, a), {
        type: "text",
        inputMode: "decimal",
        maxLength: A(d.value) + 3,
        onChange: d.onChange,
        value: d.value,
        ref: H(r, m)
    }));
}, v = (r)=>b(r) ? /* @__PURE__ */ o(_, {
        size: p.default
    }) : x(r) ? /* @__PURE__ */ o(P, {
        size: p.default
    }) : I(r) ? /* @__PURE__ */ o($, {
        size: p.default
    }) : null, rr = {
    showBackface: !1,
    animationTarget: /* @__PURE__ */ o(w, {
        size: p.default
    }),
    isAnimating: !1
}, er = (r, param)=>{
    let { type: n, value: t } = param;
    if (n === "INPUT") {
        const e = v(t);
        if (e && !r.showBackface) return {
            animationTarget: e,
            showBackface: !0,
            isAnimating: !0
        };
        if (!b(t) && !x(t) && !I(t) && r.showBackface) return {
            animationTarget: r.animationTarget,
            showBackface: !1,
            isAnimating: !0
        };
        if (e && r.showBackface) return _object_spread_props(_object_spread({}, r), {
            animationTarget: e
        });
    }
    return n === "TRANSITION_END" ? _object_spread_props(_object_spread({}, r), {
        isAnimating: !1
    }) : r;
}, tr = (param)=>{
    let { value: r } = param;
    const [{ showBackface: n, animationTarget: t, isAnimating: e }, a] = l.useReducer(er, rr);
    return l.useEffect(()=>{
        a({
            type: "INPUT",
            value: r
        });
    }, [
        r
    ]), /* @__PURE__ */ o("div", {
        className: J,
        children: /* @__PURE__ */ M("div", {
            className: K[n ? "backface" : "default"],
            onTransitionEnd: ()=>e && a({
                    type: "TRANSITION_END"
                }),
            children: [
                /* @__PURE__ */ o("div", {
                    className: Q,
                    children: /* @__PURE__ */ o(w, {
                        size: p.default,
                        color: X.colors.neutralMedium
                    })
                }),
                /* @__PURE__ */ o("div", {
                    className: W,
                    children: t
                })
            ]
        })
    });
}, ir = (_param)=>{
    var { disabled: r, error: n, helperText: t, name: e, optional: a, validate: c, onChange: T, onChangeValue: m, onBlur: f, acceptedCards: u = {
        americanExpress: !0,
        visa: !0,
        masterCard: !0
    }, value: g, autoComplete: d = "cc-number", defaultValue: C, dataAttributes: F } = _param, R = _object_without_properties(_param, [
        "disabled",
        "error",
        "helperText",
        "name",
        "optional",
        "validate",
        "onChange",
        "onChangeValue",
        "onBlur",
        "acceptedCards",
        "value",
        "autoComplete",
        "defaultValue",
        "dataAttributes"
    ]);
    const { texts: E } = L(), { jumpToNext: z, rawValues: S, setFormError: y } = j(), h = (i, N)=>{
        const s = E.formCreditCardNumberError;
        return i ? I(i) && !u.americanExpress || b(i) && !u.visa || x(i) && !u.masterCard || !O(i) || A(i) !== i.length ? s : c == null ? void 0 : c(i, N) : a ? "" : E.formFieldErrorIsMandatory;
    }, k = (i)=>i.replace(/\s/g, ""), B = D({
        name: e,
        value: g,
        defaultValue: C,
        processValue: k,
        helperText: t,
        optional: a,
        error: n,
        disabled: r,
        onBlur: f,
        validate: h,
        onChange: T,
        onChangeValue: m
    });
    var _ref;
    return /* @__PURE__ */ o(U, _object_spread_props(_object_spread({}, R, B), {
        onChange: (i)=>{
            B.onChange(i);
            const N = i.currentTarget.value, s = k(N);
            if (s.length >= A(s)) {
                const V = h == null ? void 0 : h(s, N);
                V ? y({
                    name: e,
                    error: V
                }) : z(e);
            }
        },
        inputComponent: Z,
        autoComplete: d,
        endIcon: /* @__PURE__ */ o(tr, {
            value: (_ref = g !== null && g !== void 0 ? g : S[e]) !== null && _ref !== void 0 ? _ref : ""
        }),
        dataAttributes: _object_spread({
            "component-name": "CreditCardNumberField"
        }, F)
    }));
}, Tr = ir;
export { Tr as default };
