"use client";
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
import { jsx as r, jsxs as B } from "react/jsx-runtime";
import * as e from "react";
import U, { BaseTouchable as b } from "./touchable.js";
import S from "classnames";
import { isWebViewBridgeAvailable as C, nativeMessage as M } from "@tef-novum/webview-bridge";
import { useTheme as _, useElementDimensions as w, useScreenSize as A } from "./hooks.js";
import { Text2 as x, Text3 as L } from "./text.js";
import { TRANSITION_TIME_IN_MS as W, snackbarContainer as y, snackbar as P, snackbarOpen as V, wrapper as z, wrapperCritical as F, wrapperInfo as H, wrapperOpen as j, content as X, button as Y, longButton as $, dismissButton as q, dismissIcon as G } from "./snackbar.css-mistica.js";
import { sprinkles as k } from "./sprinkles.css-mistica.js";
import { vars as N } from "./skins/skin-contract.css-mistica.js";
import { getPrefixedDataAttributes as J } from "./utils/dom.js";
import { Portal as K } from "./portal.js";
import Q from "./generated/mistica-icons/icon-close-regular.js";
const Z = [
    "DISMISS",
    "TIMEOUT",
    "CONSECUTIVE",
    "BUTTON"
], ee = 5e3, re = 1e4, te = /*#__PURE__*/ e.forwardRef((param, I)=>{
    let { message: m, buttonText: n, buttonAccessibilityLabel: u, duration: t, onClose: o, type: i, withDismiss: d = !1, dataAttributes: O } = param;
    const { texts: p } = _(), [s, a] = e.useState(!1), { width: R, ref: c } = w(), { isDesktopOrBigger: D } = A(), l = R > (D ? 160 : 128), E = e.useRef(null), g = t === 1 / 0 && !n || d, T = e.useRef(o);
    e.useEffect(()=>{
        T.current = o;
    }, [
        o
    ]);
    const f = e.useCallback((v)=>{
        a(!1), setTimeout(()=>{
            var h;
            (h = T.current) == null || h.call(T, v);
        }, process.env.NODE_ENV === "test" ? 0 : W);
    }, []);
    return e.useImperativeHandle(I, ()=>_object_spread_props(_object_spread({}, E), {
            close: f
        }), [
        f
    ]), e.useEffect(()=>{
        const v = setTimeout(()=>{
            a(!0);
        }, 50), h = t !== 1 / 0 ? setTimeout(()=>f({
                action: "TIMEOUT"
            }), t) : void 0;
        return ()=>{
            clearTimeout(v), clearTimeout(h);
        };
    }, [
        f,
        t
    ]), /* @__PURE__ */ r(K, {
        className: y,
        children: /* @__PURE__ */ r("div", {
            ref: E,
            className: S(P, {
                [V]: s
            }),
            children: /* @__PURE__ */ B("div", _object_spread_props(_object_spread({
                role: "alert",
                className: S(z, i === "CRITICAL" ? F : H, {
                    [j]: s
                })
            }, J(O, "SnackBar")), {
                children: [
                    /* @__PURE__ */ B("div", {
                        className: S(X, k({
                            flexDirection: l ? "column" : "row",
                            alignItems: l ? void 0 : "center"
                        })),
                        style: g && !l ? {
                            paddingRight: 32
                        } : void 0,
                        children: [
                            /* @__PURE__ */ r("div", {
                                style: g && l ? {
                                    paddingRight: 32
                                } : void 0,
                                children: /* @__PURE__ */ r(x, {
                                    regular: !0,
                                    color: N.colors.textPrimaryInverse,
                                    children: m
                                })
                            }),
                            n && /* @__PURE__ */ r("div", {
                                className: S(Y, {
                                    [$]: l
                                }),
                                children: /* @__PURE__ */ r(b, {
                                    className: k({
                                        paddingY: 4,
                                        paddingX: 8,
                                        border: "none",
                                        padding: 0,
                                        background: "transparent"
                                    }),
                                    ref: c,
                                    onPress: ()=>{
                                        f({
                                            action: "BUTTON"
                                        });
                                    },
                                    "aria-label": u,
                                    children: /* @__PURE__ */ r(L, {
                                        medium: !0,
                                        forceMobileSizes: !0,
                                        truncate: !0,
                                        color: i === "CRITICAL" ? N.colors.textPrimaryInverse : N.colors.textLinkSnackbar,
                                        children: n
                                    })
                                })
                            })
                        ]
                    }),
                    g ? /* @__PURE__ */ r(U, {
                        onPress: ()=>{
                            f({
                                action: "DISMISS"
                            });
                        },
                        "aria-label": p.closeButtonLabel,
                        className: q[l ? "topRight" : "centered"],
                        style: {
                            display: "flex",
                            width: 32,
                            height: 32
                        },
                        children: /* @__PURE__ */ r("div", {
                            className: G,
                            children: /* @__PURE__ */ r(Q, {
                                color: N.colors.inverse,
                                size: 20
                            })
                        })
                    }) : null
                ]
            }))
        })
    });
}), ne = /*#__PURE__*/ e.forwardRef((param, O)=>{
    let { message: m, buttonText: n, buttonAccessibilityLabel: u, duration: t, onClose: o = ()=>{}, type: i = "INFORMATIVE", withDismiss: d } = param;
    const I = n ? re : ee;
    t = Math.max(t !== null && t !== void 0 ? t : I, I);
    const p = C(), s = e.useRef(o), a = e.useRef(!1);
    return e.useEffect(()=>{
        s.current = o;
    }, [
        o
    ]), e.useEffect(()=>{
        p && !a.current && (a.current = !0, M({
            message: m,
            // @ts-expect-error duration can be 'PERSISTENT' in new webview-bridge lib versions, and old apps will ignore it
            duration: t === 1 / 0 ? "PERSISTENT" : void 0,
            buttonText: n,
            buttonAccessibilityLabel: u,
            type: i,
            withDismiss: d
        }).then((R)=>{
            const c = R;
            c != null && c.action && Z.includes(c.action) ? s.current({
                action: c.action
            }) : s.current({
                action: "DISMISS"
            });
        }).finally(()=>{
            a.current = !1;
        }));
    }, [
        u,
        n,
        t,
        m,
        p,
        i,
        d
    ]), p ? null : /* @__PURE__ */ r(te, {
        ref: O,
        message: m,
        duration: t,
        buttonText: n,
        buttonAccessibilityLabel: u,
        type: i,
        onClose: s.current,
        withDismiss: d
    });
}), he = ne;
export { he as default };
