"use client";
import { jsx as e, Fragment as c, jsxs as u } from "react/jsx-runtime";
import * as a from "react";
import b from "./generated/mistica-icons/icon-close-regular.js";
import { useTheme as f } from "./hooks.js";
import { InternalIconButton as d } from "./icon-button.js";
import { dismissableContainer as p, dismissableButton as x } from "./maybe-dismissable.css-mistica.js";
import { ThemeVariant as h } from "./theme-variant-context.js";
const r = /*#__PURE__*/ a.createContext(!1), j = ()=>a.useContext(r), I = (param)=>{
    let { children: s, width: i, onClose: t, "aria-label": o, isOverMedia: m, isInverse: l } = param;
    const { texts: n } = f();
    return t ? /* @__PURE__ */ u("section", {
        className: p,
        "aria-label": o,
        style: {
            width: i || "100%",
            minHeight: "100%"
        },
        children: [
            /* @__PURE__ */ e(r.Provider, {
                value: !0,
                children: s
            }),
            /* @__PURE__ */ e(h, {
                isInverse: l,
                children: /* @__PURE__ */ e("div", {
                    className: x,
                    children: /* @__PURE__ */ e(d, {
                        onPress: t,
                        "aria-label": n.closeButtonLabel,
                        small: !0,
                        isOverMedia: m,
                        Icon: b
                    })
                })
            })
        ]
    }) : /* @__PURE__ */ e(c, {
        children: s
    });
}, M = I;
export { M as default, j as useIsDismissable };
