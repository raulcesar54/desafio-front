"use client";
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
import { jsx as d } from "react/jsx-runtime";
import m from "classnames";
import * as n from "react";
import { useIsomorphicLayoutEffect as l } from "../hooks.js";
import { container as R, containerWithWrapper as w, vars as g, wrapper as N } from "./aspect-ratio-support.css-mistica.js";
import { applyCssVars as y } from "./css.js";
const u = /*#__PURE__*/ n.createContext(!0), W = (param)=>{
    let { children: t } = param;
    const [o, s] = n.useState(!0);
    return l(()=>{
        try {
            CSS.supports("aspect-ratio", "1 / 1") || s(!1);
        } catch (e) {
            s(!1);
        }
    }, []), /* @__PURE__ */ d(u.Provider, {
        value: o,
        children: t
    });
}, b = ()=>n.useContext(u), $ = (t)=>{
    const o = !!t.forceNonCssAspectRatio, s = b() && !o, h = typeof t.width != "number" && typeof t.height != "number" && t.aspectRatio !== 0, a = h ? t.aspectRatio : void 0;
    let e = t.width, i = t.height;
    var _t_aspectRatio, _t_aspectRatio1;
    t.width !== void 0 && t.height !== void 0 ? (e = t.width, i = t.height) : typeof t.width == "number" ? i = t.aspectRatio !== 0 ? t.width / ((_t_aspectRatio = t.aspectRatio) !== null && _t_aspectRatio !== void 0 ? _t_aspectRatio : 1) : void 0 : typeof t.height == "number" ? e = t.aspectRatio !== 0 ? t.height * ((_t_aspectRatio1 = t.aspectRatio) !== null && _t_aspectRatio1 !== void 0 ? _t_aspectRatio1 : 1) : void 0 : t.height ? i = t.height : e = t.width || "100%";
    var _t_as, _ref, _ref1;
    const c = h && !s, r = /*#__PURE__*/ n.createElement((_t_as = t.as) !== null && _t_as !== void 0 ? _t_as : "div", _object_spread({
        className: m(t.className, R, {
            [w]: c
        }),
        style: _object_spread({}, c ? _object_spread_props(_object_spread({}, t.style), {
            position: a ? "absolute" : "static",
            width: "100%"
        }) : _object_spread_props(_object_spread({}, t.style), {
            width: (_ref = isNaN(Number(e)) ? e : Number(e)) !== null && _ref !== void 0 ? _ref : "fit-content",
            height: (_ref1 = isNaN(Number(i)) ? i : Number(i)) !== null && _ref1 !== void 0 ? _ref1 : "fit-content"
        }), y({
            [g.aspectRatio]: a ? String(a) : "unset"
        }))
    }, !c && t.dataAttributes), t.children);
    if (c) {
        const f = (()=>a ? t.width && typeof t.width == "string" && t.width.endsWith("%") ? `${parseFloat(t.width) / a}%` : `${100 / a}%` : 0)();
        return /* @__PURE__ */ d("div", _object_spread_props(_object_spread({
            style: {
                width: e,
                height: i,
                paddingTop: f
            },
            className: N
        }, t.dataAttributes), {
            children: r
        }));
    } else return r;
};
export { $ as AspectRatioContainer, W as AspectRatioSupportProvider, b as useSupportsAspectRatio };
