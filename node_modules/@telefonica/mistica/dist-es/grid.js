function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
import c from "classnames";
import * as d from "react";
import { grid as G, gridTemplateColumns as C, gridTemplateColumnsAutoRepeat as M, gridTemplateRows as T, gridTemplateRowsAutoRepeat as j, gridAutoFlow as v, gridJustifyItems as V, gridAlignItems as k, gridJustifyContent as E, gridAlignContent as J, fullColumns as N, spanColumns as h, fullRows as w, spanRows as D, columnStart as F, rowStart as I, justifySelf as P, alignSelf as q, vars as p } from "./grid.css-mistica.js";
import { applyCssVars as B } from "./utils/css.js";
import { getPrefixedDataAttributes as R } from "./utils/dom.js";
import { sprinkles as H } from "./sprinkles.css-mistica.js";
const K = (t, e)=>{
    const i = {}, f = (r)=>typeof r == "number" ? `min(${r}px, 100%)` : r, o = (r)=>typeof r == "number" ? `${r}px` : r;
    return t && typeof t != "number" && (typeof t.minSize < "u" && (i[p.rowMinSize] = f(t.minSize)), typeof t.maxSize < "u" && (i[p.rowMaxSize] = o(t.maxSize))), e && typeof e != "number" && (typeof e.minSize < "u" && (i[p.columnMinSize] = f(e.minSize)), typeof e.maxSize < "u" && (i[p.columnMaxSize] = o(e.maxSize))), i;
}, Y = /*#__PURE__*/ d.forwardRef((param, x)=>{
    let { rows: t, columns: e, gap: i = 0, flow: f, justifyItems: o, alignItems: r, justifyContent: l, alignContent: n, height: u, minHeight: y, children: s, as: z = "div", dataAttributes: S } = param;
    const [m, a] = Array.isArray(i) ? i : [
        i,
        i
    ], A = {
        columnGap: m,
        rowGap: a,
        gridColumnGap: m,
        gridRowGap: a
    };
    let b = {}, g = "";
    try {
        g = H(A);
    } catch (e) {
        b = {
            columnGap: typeof m == "object" ? m.mobile : m,
            rowGap: typeof a == "object" ? a.mobile : a,
            // Chrome 57-65 support
            gridColumnGap: typeof m == "object" ? m.mobile : m,
            gridRowGap: typeof a == "object" ? a.mobile : a
        };
    }
    return /*#__PURE__*/ d.createElement(z, _object_spread({
        ref: x,
        className: c(G, g, e ? typeof e == "number" ? C[e] : M : "", t ? typeof t == "number" ? T[t] : j : "", f ? v[f] : "", o ? V[o] : "", r ? k[r] : "", l ? E[l] : "", n ? J[n] : ""),
        style: _object_spread({
            height: u,
            minHeight: y
        }, g ? {} : b, B(_object_spread({}, K(t, e))))
    }, R(S)), s);
}), Z = /*#__PURE__*/ d.forwardRef((param, s)=>{
    let { rowStart: t, rowSpan: e, columnStart: i, columnSpan: f, span: o, justifySelf: r, alignSelf: l, children: n, as: u = "div", dataAttributes: y } = param;
    return o && (Array.isArray(o) ? (f = o[0], e = o[1]) : (f = o, e = o)), /*#__PURE__*/ d.createElement(u, _object_spread({
        ref: s,
        className: c(f ? f === "full" ? N : h[f] : "", e ? e === "full" ? w : D[e] : "", i ? F[i] : "", t ? I[t] : "", r ? P[r] : "", l ? q[l] : "")
    }, R(y)), n);
});
export { Y as Grid, Z as GridItem };
