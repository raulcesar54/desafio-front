"use client";
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
import { jsx as n, jsxs as ie } from "react/jsx-runtime";
import * as d from "react";
import { FieldContainer as ne, HelperText as ae, Label as re } from "./text-field-components.js";
import { LABEL_SCALE_MOBILE as le, LABEL_SCALE_DESKTOP as oe } from "./text-field-components.css-mistica.js";
import { Text3 as F } from "./text.js";
import { isFirefox as de, isRunningAcceptanceTest as se } from "./utils/platform.js";
import { useAriaId as L, useScreenSize as ce, useIsomorphicLayoutEffect as fe, useTheme as ue } from "./hooks.js";
import v from "classnames";
import { combineRefs as k } from "./utils/common.js";
import { startIcon as me, prefix as he, inputWithLabel as _, inputWithoutLabel as G, fullWidth as ge, fieldRightPadding as j, fieldLeftPadding as T, textArea as pe, textAreaWithLabel as Se, textAreaWithoutLabel as xe, input as be, inputFirefoxStyles as ye, hiddenDatePlaceholder as Ce, emptyDateValue as Ee, endIconContainer as Ie, menuItem as Re, menuItemSelected as Te, suggestionsContainer as ve, fieldEndIconContainer as Le, fieldElementsGap as Ae, iconButtonSize as $e, fieldEndIconGap as We } from "./text-field-base.css-mistica.js";
import { vars as Fe } from "./skins/skin-contract.css-mistica.js";
import { InternalToggleIconButton as Ne, InternalIconButton as we } from "./icon-button.js";
import { ThemeVariant as Pe } from "./theme-variant-context.js";
import { iconSize as Oe } from "./icon-button.css-mistica.js";
const Be = (o, f)=>{
    if (!f) return !0;
    const i = document.createElement("input");
    return i.type = f, i.value = o || "", i.value !== "";
}, Ze = (param)=>{
    let { hasBackgroundColor: o = !0, onPress: f, onChange: i, disabled: m, Icon: g, checkedProps: r, uncheckedProps: a, "aria-label": h } = param;
    return /* @__PURE__ */ n("div", {
        className: Le,
        children: r ? /* @__PURE__ */ n(Ne, {
            checkedProps: _object_spread_props(_object_spread({}, r), {
                "aria-label": r["aria-label"] || ""
            }),
            uncheckedProps: _object_spread_props(_object_spread({}, a), {
                "aria-label": a["aria-label"] || ""
            }),
            onChange: i,
            hasOverlay: o,
            disabled: m
        }) : /* @__PURE__ */ n(we, {
            Icon: g,
            disabled: m,
            "aria-label": h || "",
            onPress: f,
            hasOverlay: o
        })
    });
}, W = /*#__PURE__*/ d.forwardRef((_param, U)=>{
    var { error: o, helperText: f, label: i, inputProps: m, inputRef: g, defaultValue: r, value: a, onFocus: h, onBlur: x, inputComponent: p, prefix: b, startIcon: t, endIcon: u, endIconOverlay: S, shrinkLabel: N, multiline: R = !1, focus: y, fieldRef: H, maxLength: C, id: K, autoComplete: M, fullWidth: J, dataAttributes: Q } = _param, l = _object_without_properties(_param, [
        "error",
        "helperText",
        "label",
        "inputProps",
        "inputRef",
        "defaultValue",
        "value",
        "onFocus",
        "onBlur",
        "inputComponent",
        "prefix",
        "startIcon",
        "endIcon",
        "endIconOverlay",
        "shrinkLabel",
        "multiline",
        "focus",
        "fieldRef",
        "maxLength",
        "id",
        "autoComplete",
        "fullWidth",
        "dataAttributes"
    ]);
    var _ref;
    const w = L(K), P = L(), [s, c] = d.useState(r != null && r.length || a != null && a.length ? "filled" : "default"), { isTabletOrSmaller: X } = ce(), [O, B] = d.useState((_ref = r == null ? void 0 : r.length) !== null && _ref !== void 0 ? _ref : 0), A = !!i || !l.required, E = l.type === "date" || l.type === "datetime-local" || l.type === "month", D = d.useRef(void 0);
    fe(()=>{
        const e = E && !Be(a, l.type) ? "" : a;
        D.current !== a && E && !(e != null && e.length) && s === "filled" && y === void 0 && c("default"), D.current = a, s !== "focused" && e != null && e.length && (B(e.length), c("filled")), y && c("focused"), y === !1 && !(e != null && e.length) && c("default"), y === !1 && e != null && e.length && c("filled");
    }, [
        s,
        a,
        y,
        E,
        l.type
    ]), d.useEffect(()=>{
        l.autoFocus && c("focused");
    }, [
        l.autoFocus
    ]);
    const Y = R ? "textarea" : "input", Z = p ? {
        inputRef: g
    } : {
        ref: k(U, g)
    }, I = _object_spread(_object_spread_props(_object_spread({}, l), {
        maxLength: C,
        autoComplete: M
    }), m), $ = `calc(${Oe.default} + ${Ae}px)`, q = `calc(${$e} + ${We}px)`, V = N || s === "focused" || s === "filled" ? X ? le : oe : 1, ee = {
        left: `calc(${T}px + ${t ? $ : "0px"})`,
        // shrinking means applying a scale transformation, so width will be proportionally reduced.
        // Let's keep the original width.
        width: `calc((100% - ${T}px - ${t ? $ : "0px"} - ${u || S ? q : `${j}px`}) / ${V})`
    }, te = l.type === "password" && O > 0 ? "Lucida Grande, Arial, sans-serif" : "inherit";
    return /* @__PURE__ */ n(ne, {
        disabled: l.disabled,
        helperText: /* @__PURE__ */ n(ae, {
            error: o,
            leftText: f,
            id: P,
            rightText: R && C ? `${O}/${C}` : void 0
        }),
        multiline: R,
        fullWidth: J,
        fieldRef: H,
        readOnly: l.readOnly,
        dataAttributes: Q,
        children: /* @__PURE__ */ ie(Pe, {
            isInverse: !1,
            children: [
                t && /* @__PURE__ */ n("div", {
                    className: me,
                    children: t
                }),
                b && /* @__PURE__ */ n("div", {
                    className: v(he, A ? _ : G),
                    style: {
                        opacity: s === "default" ? 0 : 1
                    },
                    children: /* @__PURE__ */ n(F, {
                        color: Fe.colors.textSecondary,
                        regular: !0,
                        wordBreak: !1,
                        children: b
                    })
                }),
                /* @__PURE__ */ n("div", {
                    className: ge,
                    children: /* @__PURE__ */ n(F, {
                        as: "div",
                        regular: !0,
                        children: /*#__PURE__*/ d.createElement(p || Y, _object_spread(_object_spread_props(_object_spread({}, Z, I), {
                            id: w,
                            style: _object_spread_props(_object_spread({
                                paddingRight: u ? 0 : S ? q : j,
                                paddingLeft: b ? 0 : t ? `calc(${$} + ${T}px)` : T
                            }, I.style), {
                                fontFamily: te
                            }),
                            className: R ? v(pe, A ? Se : xe) : v(be, A ? _ : G, {
                                [ye]: de(),
                                // Hide webkit placeholder when label is not shrinked and value is empty
                                [Ce]: E && s === "default",
                                // Force height of input when value is empty to avoid field from having height 0 in iOS
                                [Ee]: E && s !== "filled"
                            }),
                            onFocus: (e)=>{
                                c("focused"), h == null || h(e);
                            },
                            onBlur: (e)=>{
                                e.target.value.length > 0 ? c("filled") : c("default"), x == null || x(e);
                            },
                            onChange: (e)=>{
                                var z;
                                C === void 0 || e.target.value.length <= C ? (B(e.target.value.length), e.target.value.length > 0 && s !== "focused" && c(e.target.value.length > 0 ? "filled" : "default"), (z = I.onChange) == null || z.call(I, e)) : (e.stopPropagation(), e.preventDefault());
                            },
                            defaultValue: r,
                            value: a
                        }), o && {
                            "aria-invalid": !0
                        }, f && {
                            "aria-describedby": P
                        }))
                    })
                }),
                i && /* @__PURE__ */ n(re, {
                    style: ee,
                    error: o,
                    forId: w,
                    inputState: s,
                    shrinkLabel: N,
                    optional: !l.required,
                    children: i
                }),
                u && /* @__PURE__ */ n("div", {
                    className: Ie,
                    children: u
                }),
                S
            ]
        })
    });
}), De = /*#__PURE__*/ d.lazy(()=>import(/* webpackChunkName: "react-autosuggest" */ "react-autosuggest")), Ve = /*#__PURE__*/ d.forwardRef((_param, m)=>{
    var { getSuggestions: o, id: f } = _param, i = _object_without_properties(_param, [
        "getSuggestions",
        "id"
    ]);
    const [g, r] = d.useState([]), a = d.useRef(null), { platformOverrides: h, texts: x } = ue(), p = L(f), b = L();
    if (o && (i.value === void 0 || i.defaultValue !== void 0)) throw Error("Fields with suggestions must be used in controlled mode");
    return o ? /* @__PURE__ */ n(d.Suspense, {
        fallback: /* @__PURE__ */ n(W, _object_spread_props(_object_spread({}, i), {
            label: se(h) ? "" : i.label,
            autoComplete: "off",
            ref: m,
            id: p
        })),
        children: /* @__PURE__ */ n(De, {
            id: b,
            inputProps: _object_spread_props(_object_spread({}, i), {
                id: p,
                autoComplete: "off",
                // @ts-expect-error Autosuggest expects slightly different types
                onChange: (t, param)=>{
                    let { newValue: u } = param;
                    var S;
                    t.target = _object_spread_props(_object_spread({}, t.target), {
                        value: u
                    }), t.currentTarget = _object_spread_props(_object_spread({}, t.currentTarget), {
                        value: u
                    }), (S = i.onChange) == null || S.call(i, t);
                }
            }),
            renderInputComponent: (t)=>/* @__PURE__ */ n(W, _object_spread_props(_object_spread({}, t), {
                    inputRef: k(a, i.inputRef, m)
                })),
            suggestions: g,
            onSuggestionsFetchRequested: (param)=>{
                let { value: t } = param;
                return r(o(t));
            },
            onSuggestionsClearRequested: ()=>r([]),
            getSuggestionValue: (t)=>t,
            renderSuggestion: (t, param)=>{
                let { isHighlighted: u } = param;
                return /* @__PURE__ */ n("div", {
                    role: "menuitem",
                    className: v(Re, {
                        [Te]: u
                    }),
                    children: /* @__PURE__ */ n(F, {
                        regular: !0,
                        children: t
                    })
                });
            },
            renderSuggestionsContainer: (t)=>/* @__PURE__ */ n("div", _object_spread_props(_object_spread({}, t.containerProps), {
                    style: {
                        width: a.current ? a.current.clientWidth + 2 : 0
                    },
                    className: ve,
                    "aria-label": `${i.label} ${x.menuLabelSuffix}`,
                    children: t.children
                }))
        })
    }) : /* @__PURE__ */ n(W, _object_spread_props(_object_spread({}, i), {
        id: p,
        ref: m
    }));
});
export { Ze as FieldEndIcon, W as TextFieldBase, Ve as TextFieldBaseAutosuggest };
