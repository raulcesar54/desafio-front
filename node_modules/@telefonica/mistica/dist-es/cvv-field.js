"use client";
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
import { jsx as r, Fragment as O, jsxs as f } from "react/jsx-runtime";
import * as R from "react";
import { useTheme as F } from "./hooks.js";
import H from "./icons/icon-cvv-visa-mc.js";
import k from "./icons/icon-cvv-amex.js";
import D from "./popover.js";
import N from "./generated/mistica-icons/icon-information-regular.js";
import { useForm as q, useFieldProps as G } from "./form-context.js";
import { TextFieldBaseAutosuggest as J } from "./text-field-base.js";
import { IntegerInput as K } from "./integer-field.js";
import I from "./inline.js";
import P from "./stack.js";
import Q from "./box.js";
import U from "./divider.js";
import T from "./text.js";
import { vars as W } from "./skins/skin-contract.css-mistica.js";
import { pxToRem as X } from "./utils/css.js";
import { iconButtonSize as m } from "./text-field-base.css-mistica.js";
import Y from "./touchable.js";
const Z = (param)=>{
    let { acceptedCards: e } = param;
    const { texts: i } = F();
    return /* @__PURE__ */ r(O, {
        children: /* @__PURE__ */ r(Q, {
            padding: 8,
            children: /* @__PURE__ */ f(P, {
                space: 8,
                children: [
                    /* @__PURE__ */ f(I, {
                        space: 16,
                        alignItems: "center",
                        children: [
                            /* @__PURE__ */ r(H, {
                                size: 48,
                                role: "img"
                            }),
                            /* @__PURE__ */ r(T, {
                                children: i.formCreditCardCvvTooltipVisaMc
                            })
                        ]
                    }),
                    /* @__PURE__ */ r(U, {}),
                    (e == null ? void 0 : e.americanExpress) && /* @__PURE__ */ f(I, {
                        space: 16,
                        alignItems: "center",
                        children: [
                            /* @__PURE__ */ r(k, {
                                size: 48,
                                role: "img"
                            }),
                            /* @__PURE__ */ r(T, {
                                children: i.formCreditCardCvvTooltipAmex
                            })
                        ]
                    })
                ]
            })
        })
    });
}, _ = (_param)=>{
    var { disabled: e, error: i, helperText: M, name: l, optional: d, validate: c, onChange: V, onChangeValue: y, onBlur: z, acceptedCards: B = {
        americanExpress: !0,
        visa: !0,
        masterCard: !0
    }, maxLength: p = 4, value: E, autoComplete: $ = "cc-csc", defaultValue: j, dataAttributes: A } = _param, S = _object_without_properties(_param, [
        "disabled",
        "error",
        "helperText",
        "name",
        "optional",
        "validate",
        "onChange",
        "onChangeValue",
        "onBlur",
        "acceptedCards",
        "maxLength",
        "value",
        "autoComplete",
        "defaultValue",
        "dataAttributes"
    ]);
    const { texts: n } = F(), { setFormError: b, jumpToNext: w } = q(), [a, u] = R.useState(!1), v = (o, s)=>o ? o.length !== p ? n.formCreditCardCvvError : c == null ? void 0 : c(o, s) : d ? "" : n.formFieldErrorIsMandatory, C = (o)=>o, h = G({
        name: l,
        value: E,
        defaultValue: j,
        processValue: C,
        helperText: M,
        optional: d,
        error: i,
        disabled: e,
        onBlur: z,
        validate: v,
        onChange: V,
        onChangeValue: y
    }), t = X(16);
    return /* @__PURE__ */ r(J, _object_spread_props(_object_spread({}, S, h), {
        maxLength: p,
        onChange: (o)=>{
            h.onChange(o);
            const s = o.currentTarget.value, g = C(s);
            if (g.length === p) {
                const x = v(g, s);
                x ? b({
                    name: l,
                    error: x
                }) : w(l);
            }
        },
        endIcon: /* @__PURE__ */ r(D, {
            position: "top",
            open: a,
            children: /* @__PURE__ */ r(Z, {
                acceptedCards: B
            }),
            onClose: ()=>u(!1),
            target: /* @__PURE__ */ r("div", {
                style: {
                    width: t,
                    height: t
                },
                children: /* @__PURE__ */ r(Y, {
                    style: {
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center",
                        width: m,
                        height: m,
                        position: "relative",
                        left: `calc(-1 * (${m} - ${t}) / 2)`,
                        top: `calc(-1 * (${m} - ${t}) / 2)`
                    },
                    onPress: ()=>u(!a),
                    "aria-label": a ? n.formCreditCardCvvTooltipVisaMcButtonClose : n.formCreditCardCvvTooltipVisaMcButtonOpen,
                    children: /* @__PURE__ */ r(N, {
                        size: t,
                        color: W.colors.neutralMedium
                    })
                })
            })
        }),
        autoComplete: $,
        inputComponent: K,
        dataAttributes: _object_spread({
            "component-name": "CvvField"
        }, A)
    }));
}, hr = _;
export { hr as default };
