"use client";
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
import { jsx as b, jsxs as te } from "react/jsx-runtime";
import * as s from "react";
import { iosThumb as oe, defaultThumb as re, thumbHover as ne, thumbActive as ae, container as ce, disabled as se, track as ie, thumbContainer as le, input as ue } from "./slider.css-mistica.js";
import { vars as Y } from "./skins/skin-contract.css-mistica.js";
import { isTouchableDevice as fe } from "./utils/environment.js";
import j from "classnames";
import { cancelEvent as V } from "./utils/dom.js";
import { useTheme as de } from "./hooks.js";
import he from "./tooltip.js";
import be from "./box.js";
import { useControlProps as ge } from "./form-context.js";
import { combineRefs as ve } from "./utils/common.js";
const Re = 48, me = 20, Ce = 28, Ve = (n, t, o)=>t >= o ? 0 : (n - t) / (o - t), I = (n, t, o, a, g)=>{
    const v = (i)=>{
        if (i === void 0) return t;
        const B = n ? t + (o - t) * i : i;
        return Math.max(t, Math.min(o, B));
    };
    if (t >= o) return t;
    const h = v(g), P = t + Math.floor((h - t) / a) * a, R = t + Math.ceil((h - t) / a) * a;
    return R <= o && R - h <= h - P ? R : P;
}, w = (n, t, o)=>{
    if (!o) return t;
    if (t === void 0) return n;
    let a = 0;
    return o.forEach((g, v)=>{
        o && Math.abs(g - t) <= Math.abs(o[a] - t) && (a = v);
    }), a;
}, Pe = /*#__PURE__*/ s.forwardRef((_param, B)=>{
    var { values: n, step: t = 1, min: o = 0, max: a = 100, "aria-label": g, "aria-labelledby": v, id: h, dataAttributes: P, tooltip: R } = _param, i = _object_without_properties(_param, [
        "values",
        "step",
        "min",
        "max",
        "aria-label",
        "aria-labelledby",
        "id",
        "dataAttributes",
        "tooltip"
    ]);
    n && (n.length === 0 ? n = void 0 : a = n.length - 1), t = t | 0, t = t <= 0 ? 1 : t;
    const { defaultValue: Z, value: D, onChange: H, focusableRef: x, disabled: U, name: z } = ge({
        name: i.name,
        value: i.value !== void 0 ? I(!1, o, a, t, w(o, i.value, n)) : void 0,
        defaultValue: i.defaultValue !== void 0 ? I(!1, o, a, t, w(o, i.defaultValue, n)) : void 0,
        onChange: i.onChangeValue,
        disabled: i.disabled
    }), [q, G] = s.useState(D !== null && D !== void 0 ? D : I(!1, o, a, t, w(o, Z, n))), u = D !== null && D !== void 0 ? D : q, $ = s.useRef(u), T = s.useCallback((e, r)=>{
        const c = I(r, o, a, t, e);
        $.current !== c && (H(n ? n[c] : c), G(c), $.current = c);
    }, [
        o,
        a,
        t,
        n,
        H
    ]);
    s.useEffect(()=>{
        T($.current, !1);
    }, [
        T
    ]);
    const _ = s.useRef(null), m = s.useRef(null), N = s.useRef(null), J = s.useRef(null), [p, E] = s.useState(!1), [y, F] = s.useState(!1), [K, L] = s.useState(!1), { isIos: S } = de(), A = (e, r, c)=>{
        const d = e == null ? void 0 : e.getBoundingClientRect();
        return !!d && d.left <= r && r <= d.right && d.top <= c && c <= d.bottom;
    }, l = fe(), C = S ? Ce : me, f = l ? Re : C, M = (e)=>{
        const r = _.current;
        if (r) {
            const c = r.getBoundingClientRect().left + C / 2, d = r.getBoundingClientRect().right - C / 2;
            T((e - c) / (d - c), !0);
        }
    }, Q = (e)=>{
        V(e), M(e.clientX);
    }, W = (e)=>{
        const r = m.current;
        r && (r.onpointermove = Q, r.setPointerCapture(e.pointerId));
    }, ee = (e)=>{
        const r = m.current;
        r && (r.onpointermove = null, r.releasePointerCapture(e.pointerId));
    }, k = `calc(${Ve(u, o, a)} * (100% - ${C}px) - ${(f - C) / 2}px)`, O = `calc(${k} + ${f / 2}px)`, X = /* @__PURE__ */ b("div", {
        className: j(S ? oe : re, {
            [ne]: !S && y && !p,
            [ae]: !S && p
        })
    });
    return /* @__PURE__ */ b(be, {
        paddingY: 8,
        dataAttributes: _object_spread({
            "component-name": "Slider"
        }, P),
        children: /* @__PURE__ */ te("div", {
            className: j(ce, {
                [se]: U
            }),
            style: {
                height: f
            },
            ref: N,
            onPointerDown: (e)=>{
                const r = e.clientX, c = e.clientY;
                !l && A(N.current, r, c) ? (A(m.current, r, c) || M(r), E(!0), W(e)) : V(e);
            },
            onPointerUp: (e)=>{
                l || (E(!1), ee(e));
            },
            onTouchStart: (e)=>{
                if (V(e), l) {
                    const r = e.nativeEvent.touches[0].clientX, c = e.nativeEvent.touches[0].clientY;
                    A(m.current, r, c) || M(r), E(!0);
                }
            },
            onTouchEnd: (e)=>{
                V(e), l && E(!1);
            },
            onTouchMove: (e)=>{
                V(e), l && M(e.nativeEvent.touches[0].clientX);
            },
            children: [
                /* @__PURE__ */ b("div", {
                    className: ie,
                    ref: _,
                    style: {
                        background: `linear-gradient(to right, ${Y.colors.controlActivated} ${O}, ${Y.colors.barTrack} ${O}`
                    }
                }),
                /* @__PURE__ */ b("div", {
                    className: le,
                    ref: m,
                    style: {
                        cursor: p ? "grabbing" : y ? "grab" : "auto",
                        left: k,
                        width: f,
                        height: f
                    },
                    onPointerEnter: ()=>{
                        l || F(!0);
                    },
                    onPointerLeave: ()=>{
                        l || F(!1);
                    },
                    children: R ? /* @__PURE__ */ b(he, {
                        target: X,
                        open: p || K || y ? !0 : void 0,
                        description: String(n ? n[u] : u),
                        centerContent: !0,
                        delay: !1
                    }) : X
                }),
                /* @__PURE__ */ b("input", {
                    type: "range",
                    min: o,
                    max: a,
                    ref: ve(B, J, x),
                    step: t,
                    "aria-label": g,
                    "aria-labelledby": v,
                    id: h,
                    className: ue,
                    "aria-valuetext": String(n ? n[u] : u),
                    style: {
                        left: k,
                        width: f,
                        height: f
                    },
                    name: z,
                    value: u,
                    disabled: U,
                    onChange: (e)=>T(+e.target.value, !1),
                    onFocus: ()=>{
                        L(!0);
                    },
                    onBlur: ()=>{
                        L(!1);
                    }
                })
            ]
        })
    });
}), De = Pe;
export { De as default };
