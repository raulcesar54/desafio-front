"use client";
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
import { jsx as s, Fragment as x, jsxs as h } from "react/jsx-runtime";
import * as b from "react";
import { debounce as I } from "./utils/helpers.js";
import { SPACE as C } from "./utils/keys.js";
import { useControlProps as D } from "./form-context.js";
import { Text3 as S } from "./text.js";
import V from "./inline.js";
import { useTheme as y, useAriaId as g } from "./hooks.js";
import { getPrefixedDataAttributes as A } from "./utils/dom.js";
import { containerDisabled as E, container as P, interactiveArea as j, disabled as K, checkboxVariants as M, switchCheckboxContainerVariants as R, switchCheckboxLabel as T, barVariants as $, ballVariants as F } from "./switch-component.css-mistica.js";
const L = (e)=>{
    const { isIos: d, isDarkMode: f } = y(), n = g(e["aria-labelledby"]), { defaultValue: u, value: l, onChange: a, focusableRef: k, disabled: i } = D({
        name: e.name,
        value: e.checked,
        defaultValue: e.defaultChecked,
        onChange: e.onChange,
        disabled: e.disabled
    }), [c, v] = b.useState(!!u), r = l !== null && l !== void 0 ? l : c, N = b.useMemo(()=>process.env.NODE_ENV === "test" ? (t)=>a == null ? void 0 : a(t) : I((t)=>{
            a == null || a(t);
        }, 300), [
        a
    ]), o = ()=>{
        l !== void 0 ? a == null || a(!l) : (v(!c), N(!c));
    }, w = (t)=>{
        t.key === C && (t.preventDefault(), t.stopPropagation(), o());
    }, m = /* @__PURE__ */ s("div", {
        className: M[d ? i ? "disabledIos" : "ios" : i ? "disabled" : "default"],
        children: /* @__PURE__ */ s("div", {
            className: R[d ? "ios" : "default"],
            children: /* @__PURE__ */ h("div", {
                className: T,
                children: [
                    /* @__PURE__ */ s("span", {
                        className: $[d ? r ? "checkedIos" : f ? "iosDark" : "ios" : r ? "checked" : "default"]
                    }),
                    /* @__PURE__ */ s("span", {
                        className: F[d ? r ? "checkedIos" : "ios" : r ? "checked" : "default"]
                    })
                ]
            })
        })
    });
    return(// When the switch is disabled, it shouldn't be focusable
    // eslint-disable-next-line jsx-a11y/interactive-supports-focus
    /* @__PURE__ */ s("span", _object_spread_props(_object_spread({
        role: "switch",
        "aria-checked": l !== null && l !== void 0 ? l : c,
        onClick: (t)=>{
            t.stopPropagation(), i || o();
        },
        onKeyDown: i ? void 0 : w,
        tabIndex: i ? void 0 : 0,
        ref: k,
        className: i ? E : P,
        "aria-disabled": i,
        "aria-label": e["aria-label"],
        "aria-labelledby": e["aria-label"] ? void 0 : n
    }, A(e.dataAttributes, "Switch")), {
        children: e.render ? /* @__PURE__ */ s(x, {
            children: e.render({
                controlElement: m,
                labelId: n,
                disabled: !!i,
                checked: l !== null && l !== void 0 ? l : c
            })
        }) : /* @__PURE__ */ h(V, {
            space: 16,
            alignItems: "center",
            className: j,
            children: [
                m,
                e.children && /* @__PURE__ */ s(S, {
                    regular: !0,
                    as: "div",
                    id: n,
                    children: /* @__PURE__ */ s("span", {
                        className: i ? K : "",
                        children: e.children
                    })
                })
            ]
        })
    })));
}, U = L;
export { U as default };
