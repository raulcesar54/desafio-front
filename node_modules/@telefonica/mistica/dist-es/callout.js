"use client";
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
import { jsx as r, jsxs as e } from "react/jsx-runtime";
import m from "./stack.js";
import b from "./inline.js";
import v from "./box.js";
import { useTheme as x } from "./hooks.js";
import { useThemeVariant as C, ThemeVariant as B } from "./theme-variant-context.js";
import { Text3 as k, Text2 as I } from "./text.js";
import R from "./generated/mistica-icons/icon-close-regular.js";
import { IconButton as T } from "./icon-button.js";
import N from "classnames";
import S from "./button-group.js";
import { container as y, content as V, closeButtonContainerSize as j, closeButtonContainer as A } from "./callout.css-mistica.js";
import { vars as P } from "./image.css-mistica.js";
import { sprinkles as $ } from "./sprinkles.css-mistica.js";
import { vars as o } from "./skins/skin-contract.css-mistica.js";
import { getPrefixedDataAttributes as w } from "./utils/dom.js";
import { applyCssVars as z } from "./utils/css.js";
const D = (param)=>{
    let { title: a, titleAs: c = "h2", description: d, icon: i, onClose: t, button: l, secondaryButton: s, buttonLink: n, "aria-label": p, dataAttributes: u, role: f } = param;
    const h = C(), { texts: g } = x();
    return /* @__PURE__ */ r("section", _object_spread_props(_object_spread({
        className: N(y, $({
            background: {
                inverse: o.colors.backgroundContainer,
                alternative: o.colors.backgroundContainer,
                default: o.colors.backgroundContainerAlternative
            }[h]
        })),
        style: z({
            [P.mediaBorderRadius]: o.borderRadii.mediaSmall
        }),
        "aria-label": p !== null && p !== void 0 ? p : a,
        role: f
    }, w(u, "Callout")), {
        children: /* @__PURE__ */ e(B, {
            isInverse: !1,
            children: [
                i && /* @__PURE__ */ r(v, {
                    paddingRight: 16,
                    children: i
                }),
                /* @__PURE__ */ e("div", {
                    className: V,
                    children: [
                        /* @__PURE__ */ e(m, {
                            space: 16,
                            children: [
                                /* @__PURE__ */ e(b, {
                                    fullWidth: !0,
                                    alignItems: "flex-start",
                                    space: "between",
                                    children: [
                                        /* @__PURE__ */ e(m, {
                                            space: 4,
                                            children: [
                                                /* @__PURE__ */ r(k, {
                                                    as: c,
                                                    regular: !0,
                                                    children: a
                                                }),
                                                /* @__PURE__ */ r(I, {
                                                    as: "p",
                                                    regular: !0,
                                                    color: o.colors.textSecondary,
                                                    children: d
                                                })
                                            ]
                                        }),
                                        t && // Create empty div in order to fill space that iconButton occupies.
                                        // Without this, the content's vertical alignment can be affected
                                        /* @__PURE__ */ r("div", {
                                            className: j
                                        })
                                    ]
                                }),
                                (l || s || n) && /* @__PURE__ */ r(S, {
                                    primaryButton: l,
                                    secondaryButton: s,
                                    link: n
                                })
                            ]
                        }),
                        t && /* @__PURE__ */ r("div", {
                            className: A,
                            children: /* @__PURE__ */ r(T, {
                                small: !0,
                                bleedY: !0,
                                bleedRight: !0,
                                Icon: R,
                                onPress: t,
                                "aria-label": g.closeButtonLabel
                            })
                        })
                    ]
                })
            ]
        })
    }));
}, rr = D;
export { rr as default };
