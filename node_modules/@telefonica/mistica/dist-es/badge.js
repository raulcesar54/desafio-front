"use client";
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
import { jsx as t, Fragment as b, jsxs as p } from "react/jsx-runtime";
import m from "classnames";
import { container as u, badgeNumber as l, badgeWithChildren as n, badgeBigNumber as x, badgeBorder as d, badge as B } from "./badge.css-mistica.js";
import { getPrefixedDataAttributes as N } from "./utils/dom.js";
import { Text1 as h } from "./text.js";
import { useTheme as I } from "./hooks.js";
import { vars as y } from "./skins/skin-contract.css-mistica.js";
import { useIsInverseVariant as P } from "./theme-variant-context.js";
const j = (param)=>{
    let { children: e, value: r, right: s, top: o, dataAttributes: c } = param;
    const f = P(), { textPresets: g } = I();
    if (e && r === 0) return /* @__PURE__ */ t(b, {
        children: e
    });
    if (r === 0) return null;
    const i = r && r > 9, a = f || !!e;
    return /* @__PURE__ */ p("div", _object_spread_props(_object_spread({
        className: u
    }, N(c, "Badge")), {
        children: [
            e,
            r ? /* @__PURE__ */ t("div", {
                role: "presentation",
                "aria-hidden": "true",
                className: m(l, {
                    [n]: !!e,
                    [x]: i,
                    [d]: a
                }),
                style: {
                    right: s,
                    top: o
                },
                children: /* @__PURE__ */ t(h, {
                    forceMobileSizes: !0,
                    weight: g.indicator.weight,
                    color: y.colors.textPrimaryInverse,
                    children: i ? "+9" : r
                })
            }) : /* @__PURE__ */ t("div", {
                style: {
                    right: s,
                    top: o
                },
                className: m(B, {
                    [n]: !!e,
                    [d]: a
                })
            })
        ]
    }));
}, M = j;
export { M as default };
